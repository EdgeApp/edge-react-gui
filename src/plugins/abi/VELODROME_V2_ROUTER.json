[
  {
    "inputs": [
      { "internalType": "address", "name": "_forwarder", "type": "address" },
      { "internalType": "address", "name": "_factoryRegistry", "type": "address" },
      { "internalType": "address", "name": "_v1Factory", "type": "address" },
      { "internalType": "address", "name": "_factory", "type": "address" },
      { "internalType": "address", "name": "_voter", "type": "address" },
      { "internalType": "address", "name": "_weth", "type": "address" }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  { "inputs": [], "name": "ConversionFromV2ToV1VeloProhibited", "type": "error" },
  { "inputs": [], "name": "ETHTransferFailed", "type": "error" },
  { "inputs": [], "name": "Expired", "type": "error" },
  { "inputs": [], "name": "InsufficientAmount", "type": "error" },
  { "inputs": [], "name": "InsufficientAmountA", "type": "error" },
  { "inputs": [], "name": "InsufficientAmountADesired", "type": "error" },
  { "inputs": [], "name": "InsufficientAmountAOptimal", "type": "error" },
  { "inputs": [], "name": "InsufficientAmountB", "type": "error" },
  { "inputs": [], "name": "InsufficientAmountBDesired", "type": "error" },
  { "inputs": [], "name": "InsufficientLiquidity", "type": "error" },
  { "inputs": [], "name": "InsufficientOutputAmount", "type": "error" },
  { "inputs": [], "name": "InvalidAmountInForETHDeposit", "type": "error" },
  { "inputs": [], "name": "InvalidPath", "type": "error" },
  { "inputs": [], "name": "InvalidRouteA", "type": "error" },
  { "inputs": [], "name": "InvalidRouteB", "type": "error" },
  { "inputs": [], "name": "InvalidTokenInForETHDeposit", "type": "error" },
  { "inputs": [], "name": "OnlyWETH", "type": "error" },
  { "inputs": [], "name": "PoolDoesNotExist", "type": "error" },
  { "inputs": [], "name": "PoolFactoryDoesNotExist", "type": "error" },
  { "inputs": [], "name": "SameAddresses", "type": "error" },
  { "inputs": [], "name": "ZeroAddress", "type": "error" },
  { "inputs": [], "name": "ETHER", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
  {
    "inputs": [
      { "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routes",
        "type": "tuple[]"
      },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "UNSAFE_swapExactTokensForTokens",
    "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "uint256", "name": "amountADesired", "type": "uint256" },
      { "internalType": "uint256", "name": "amountBDesired", "type": "uint256" },
      { "internalType": "uint256", "name": "amountAMin", "type": "uint256" },
      { "internalType": "uint256", "name": "amountBMin", "type": "uint256" },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "addLiquidity",
    "outputs": [
      { "internalType": "uint256", "name": "amountA", "type": "uint256" },
      { "internalType": "uint256", "name": "amountB", "type": "uint256" },
      { "internalType": "uint256", "name": "liquidity", "type": "uint256" }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "uint256", "name": "amountTokenDesired", "type": "uint256" },
      { "internalType": "uint256", "name": "amountTokenMin", "type": "uint256" },
      { "internalType": "uint256", "name": "amountETHMin", "type": "uint256" },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "addLiquidityETH",
    "outputs": [
      { "internalType": "uint256", "name": "amountToken", "type": "uint256" },
      { "internalType": "uint256", "name": "amountETH", "type": "uint256" },
      { "internalType": "uint256", "name": "liquidity", "type": "uint256" }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "defaultFactory",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "factoryRegistry",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "address", "name": "_factory", "type": "address" },
      { "internalType": "uint256", "name": "amountInA", "type": "uint256" },
      { "internalType": "uint256", "name": "amountInB", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routesA",
        "type": "tuple[]"
      },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routesB",
        "type": "tuple[]"
      }
    ],
    "name": "generateZapInParams",
    "outputs": [
      { "internalType": "uint256", "name": "amountOutMinA", "type": "uint256" },
      { "internalType": "uint256", "name": "amountOutMinB", "type": "uint256" },
      { "internalType": "uint256", "name": "amountAMin", "type": "uint256" },
      { "internalType": "uint256", "name": "amountBMin", "type": "uint256" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "address", "name": "_factory", "type": "address" },
      { "internalType": "uint256", "name": "liquidity", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routesA",
        "type": "tuple[]"
      },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routesB",
        "type": "tuple[]"
      }
    ],
    "name": "generateZapOutParams",
    "outputs": [
      { "internalType": "uint256", "name": "amountOutMinA", "type": "uint256" },
      { "internalType": "uint256", "name": "amountOutMinB", "type": "uint256" },
      { "internalType": "uint256", "name": "amountAMin", "type": "uint256" },
      { "internalType": "uint256", "name": "amountBMin", "type": "uint256" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "amountIn", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routes",
        "type": "tuple[]"
      }
    ],
    "name": "getAmountsOut",
    "outputs": [{ "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "address", "name": "_factory", "type": "address" }
    ],
    "name": "getReserves",
    "outputs": [
      { "internalType": "uint256", "name": "reserveA", "type": "uint256" },
      { "internalType": "uint256", "name": "reserveB", "type": "uint256" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "forwarder", "type": "address" }],
    "name": "isTrustedForwarder",
    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "address", "name": "_factory", "type": "address" }
    ],
    "name": "pairFor",
    "outputs": [{ "internalType": "address", "name": "pool", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "address", "name": "_factory", "type": "address" }
    ],
    "name": "poolFor",
    "outputs": [{ "internalType": "address", "name": "pool", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "address", "name": "_factory", "type": "address" },
      { "internalType": "uint256", "name": "amountADesired", "type": "uint256" },
      { "internalType": "uint256", "name": "amountBDesired", "type": "uint256" }
    ],
    "name": "quoteAddLiquidity",
    "outputs": [
      { "internalType": "uint256", "name": "amountA", "type": "uint256" },
      { "internalType": "uint256", "name": "amountB", "type": "uint256" },
      { "internalType": "uint256", "name": "liquidity", "type": "uint256" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "address", "name": "_factory", "type": "address" },
      { "internalType": "uint256", "name": "liquidity", "type": "uint256" }
    ],
    "name": "quoteRemoveLiquidity",
    "outputs": [
      { "internalType": "uint256", "name": "amountA", "type": "uint256" },
      { "internalType": "uint256", "name": "amountB", "type": "uint256" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "address", "name": "_factory", "type": "address" }
    ],
    "name": "quoteStableLiquidityRatio",
    "outputs": [{ "internalType": "uint256", "name": "ratio", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "uint256", "name": "liquidity", "type": "uint256" },
      { "internalType": "uint256", "name": "amountAMin", "type": "uint256" },
      { "internalType": "uint256", "name": "amountBMin", "type": "uint256" },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "removeLiquidity",
    "outputs": [
      { "internalType": "uint256", "name": "amountA", "type": "uint256" },
      { "internalType": "uint256", "name": "amountB", "type": "uint256" }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "uint256", "name": "liquidity", "type": "uint256" },
      { "internalType": "uint256", "name": "amountTokenMin", "type": "uint256" },
      { "internalType": "uint256", "name": "amountETHMin", "type": "uint256" },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "removeLiquidityETH",
    "outputs": [
      { "internalType": "uint256", "name": "amountToken", "type": "uint256" },
      { "internalType": "uint256", "name": "amountETH", "type": "uint256" }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "uint256", "name": "liquidity", "type": "uint256" },
      { "internalType": "uint256", "name": "amountTokenMin", "type": "uint256" },
      { "internalType": "uint256", "name": "amountETHMin", "type": "uint256" },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
    "outputs": [{ "internalType": "uint256", "name": "amountETH", "type": "uint256" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenA", "type": "address" },
      { "internalType": "address", "name": "tokenB", "type": "address" }
    ],
    "name": "sortTokens",
    "outputs": [
      { "internalType": "address", "name": "token0", "type": "address" },
      { "internalType": "address", "name": "token1", "type": "address" }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "amountOutMin", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routes",
        "type": "tuple[]"
      },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "swapExactETHForTokens",
    "outputs": [{ "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" }],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "amountOutMin", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routes",
        "type": "tuple[]"
      },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "amountIn", "type": "uint256" },
      { "internalType": "uint256", "name": "amountOutMin", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routes",
        "type": "tuple[]"
      },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "swapExactTokensForETH",
    "outputs": [{ "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "amountIn", "type": "uint256" },
      { "internalType": "uint256", "name": "amountOutMin", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routes",
        "type": "tuple[]"
      },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "amountIn", "type": "uint256" },
      { "internalType": "uint256", "name": "amountOutMin", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routes",
        "type": "tuple[]"
      },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "swapExactTokensForTokens",
    "outputs": [{ "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "amountIn", "type": "uint256" },
      { "internalType": "uint256", "name": "amountOutMin", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routes",
        "type": "tuple[]"
      },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "v1Factory",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  { "inputs": [], "name": "voter", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
  {
    "inputs": [],
    "name": "weth",
    "outputs": [{ "internalType": "contract IWETH", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenIn", "type": "address" },
      { "internalType": "uint256", "name": "amountInA", "type": "uint256" },
      { "internalType": "uint256", "name": "amountInB", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "tokenA", "type": "address" },
          { "internalType": "address", "name": "tokenB", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" },
          { "internalType": "uint256", "name": "amountOutMinA", "type": "uint256" },
          { "internalType": "uint256", "name": "amountOutMinB", "type": "uint256" },
          { "internalType": "uint256", "name": "amountAMin", "type": "uint256" },
          { "internalType": "uint256", "name": "amountBMin", "type": "uint256" }
        ],
        "internalType": "struct IRouter.Zap",
        "name": "zapInPool",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routesA",
        "type": "tuple[]"
      },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routesB",
        "type": "tuple[]"
      },
      { "internalType": "address", "name": "to", "type": "address" },
      { "internalType": "bool", "name": "stake", "type": "bool" }
    ],
    "name": "zapIn",
    "outputs": [{ "internalType": "uint256", "name": "liquidity", "type": "uint256" }],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenOut", "type": "address" },
      { "internalType": "uint256", "name": "liquidity", "type": "uint256" },
      {
        "components": [
          { "internalType": "address", "name": "tokenA", "type": "address" },
          { "internalType": "address", "name": "tokenB", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" },
          { "internalType": "uint256", "name": "amountOutMinA", "type": "uint256" },
          { "internalType": "uint256", "name": "amountOutMinB", "type": "uint256" },
          { "internalType": "uint256", "name": "amountAMin", "type": "uint256" },
          { "internalType": "uint256", "name": "amountBMin", "type": "uint256" }
        ],
        "internalType": "struct IRouter.Zap",
        "name": "zapOutPool",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routesA",
        "type": "tuple[]"
      },
      {
        "components": [
          { "internalType": "address", "name": "from", "type": "address" },
          { "internalType": "address", "name": "to", "type": "address" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "address", "name": "factory", "type": "address" }
        ],
        "internalType": "struct IRouter.Route[]",
        "name": "routesB",
        "type": "tuple[]"
      }
    ],
    "name": "zapOut",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  { "stateMutability": "payable", "type": "receive" }
]
