// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OutlinedTextInput should render with some props 1`] = `
<TouchableWithoutFeedback
  accessible={false}
  onPress={[Function]}
  testID="string"
>
  <View
    onLayout={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0)",
          "borderRadius": 11,
          "flexDirection": "row",
          "minHeight": 67,
          "paddingHorizontal": 22,
        },
        {
          "alignItems": "flex-start",
          "flexGrow": 1,
          "marginBottom": 11,
          "marginLeft": 11,
          "marginRight": 11,
          "marginTop": 11,
          "paddingLeft": 65,
          "paddingRight": 65,
          "paddingVertical": 14,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "borderTopWidth": 1,
            "bottom": 0,
            "left": 22,
            "position": "absolute",
            "right": 22,
          },
          {
            "borderColor": undefined,
            "right": 34,
          },
        ]
      }
    />
    <View
      style={
        [
          {
            "borderBottomLeftRadius": 11,
            "borderBottomWidth": 1,
            "borderLeftWidth": 1,
            "borderRightWidth": 0,
            "borderTopLeftRadius": 11,
            "borderTopWidth": 1,
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": 22,
          },
          {
            "borderColor": undefined,
          },
        ]
      }
    />
    <View
      style={
        [
          {
            "borderBottomRightRadius": 11,
            "borderBottomWidth": 1,
            "borderLeftWidth": 0,
            "borderRightWidth": 1,
            "borderTopRightRadius": 11,
            "borderTopWidth": 1,
            "bottom": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 22,
          },
          {
            "borderColor": undefined,
          },
        ]
      }
    />
    <View
      style={
        [
          {
            "borderTopWidth": 1,
            "left": 22,
            "position": "absolute",
            "right": 22,
            "top": 0,
          },
          {
            "borderColor": undefined,
            "left": 34,
          },
        ]
      }
    />
    <View
      style={
        [
          {
            "height": 67,
            "justifyContent": "center",
            "left": 0,
            "paddingHorizontal": 22,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          {
            "paddingLeft": 65,
            "paddingRight": 65,
          },
        ]
      }
    >
      <Text
        accessible={true}
        numberOfLines={1}
        onLayout={[Function]}
        style={
          [
            {
              "alignSelf": "flex-start",
              "fontFamily": "Quicksand-Regular",
              "fontSize": 22,
              "padding": 0,
            },
            {
              "color": undefined,
              "transform": [
                {
                  "translateX": -36,
                },
                {
                  "translateY": -34,
                },
                {
                  "scale": 0.75,
                },
              ],
            },
          ]
        }
        testID="string.labelText"
      >
        string
      </Text>
    </View>
    <View
      style={
        {
          "bottom": -45,
          "height": 45,
          "left": 0,
          "paddingLeft": 22,
          "paddingRight": 39,
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        accessible={true}
        numberOfLines={2}
        style={
          [
            {
              "color": "#E85466",
              "fontFamily": "Quicksand-Regular",
              "fontSize": 17,
            },
            {
              "opacity": 0,
            },
          ]
        }
        testID="string.subText"
      >
        string
      </Text>
    </View>
    <Text
      accessible={true}
      numberOfLines={1}
      onLayout={[Function]}
      style={
        [
          {
            "bottom": -10,
            "fontFamily": "Quicksand-Regular",
            "fontSize": 17,
            "position": "absolute",
            "right": 28,
          },
          {
            "color": undefined,
            "opacity": 1,
            "transform": [
              {
                "translateX": 0,
              },
              {
                "scale": 1,
              },
            ],
          },
        ]
      }
      testID="string.charLimit"
    >
      5
    </Text>
    <Icon
      allowFontScaling={false}
      name="search1"
      size={12}
      style={
        {
          "color": "rgba(255, 255, 255, .75)",
          "fontSize": 22,
          "left": 0,
          "padding": 22,
          "position": "absolute",
          "top": 0,
        }
      }
    />
    <TouchableOpacity
      accessible={true}
      onPress={[Function]}
      style={
        {
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="string.clearIcon"
    >
      <Icon
        allowFontScaling={false}
        name="close"
        size={12}
        style={
          {
            "color": "rgba(255, 255, 255, .75)",
            "fontSize": 22,
            "padding": 22,
          }
        }
      />
    </TouchableOpacity>
    <TextInput
      accessibilityState={
        {
          "disabled": false,
        }
      }
      accessible={true}
      autoCapitalize="none"
      autoCorrect={true}
      autoFocus={true}
      blurOnSubmit={true}
      editable={true}
      inputAccessoryViewID="string"
      keyboardType="default"
      maxLength={11}
      multiline={true}
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      onSubmitEditing={[Function]}
      returnKeyType="done"
      secureTextEntry={false}
      selectionColor="#E85466"
      style={
        [
          {
            "color": "#FFFFFF",
            "flexGrow": 1,
            "flexShrink": 1,
            "fontFamily": "Quicksand-Regular",
            "padding": 0,
          },
          {
            "fontSize": 22,
          },
        ]
      }
      testID="string.textInput"
      textAlignVertical="top"
      value="string"
    />
  </View>
</TouchableWithoutFeedback>
`;
