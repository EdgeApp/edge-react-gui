// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FlipInputComponent should render with loading props 1`] = `
<React.Fragment>
  <TouchableOpacity
    onPress={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "marginBottom": 22,
        "marginRight": 79,
      }
    }
  >
    <Memo(CryptoIconComponent)
      marginRem={
        [
          0,
          1,
          0,
          0,
        ]
      }
      sizeRem={1.5}
    />
    <RightChevronButton
      onPress={[Function]}
      text="string"
    />
  </TouchableOpacity>
  <View
    style={
      {
        "alignItems": "flex-end",
        "height": 0,
        "top": 11,
        "width": "8%",
      }
    }
  >
    <ForwardRef(enhanceContext-Context.Consumer(Menu))
      onBackdropPress={[Function]}
      onClose={[Function]}
      onOpen={[Function]}
      onSelect={[Function]}
      renderer={[Function]}
      rendererProps={
        {
          "placement": "top",
        }
      }
    >
      <ForwardRef(enhanceContext-Context.Consumer(MenuTrigger))
        customStyles={{}}
        disabled={false}
      />
      <ForwardRef(enhanceContext-Context.Consumer(MenuOptions))
        customStyles={{}}
      >
        <ForwardRef(enhanceContext-Context.Consumer(MenuOption))
          customStyles={{}}
          disableTouchable={false}
          disabled={false}
        >
          <WithTheme(EdgeTextComponent)
            style={
              {
                "color": "#000000",
                "padding": 6,
              }
            }
          >
            Paste
          </WithTheme(EdgeTextComponent)>
        </ForwardRef(enhanceContext-Context.Consumer(MenuOption))>
      </ForwardRef(enhanceContext-Context.Consumer(MenuOptions))>
    </ForwardRef(enhanceContext-Context.Consumer(Menu))>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
          "paddingRight": 11,
        }
      }
    >
      <ForwardRef(AnimatedComponentWrapper)
        pointerEvents="auto"
        style={
          [
            {
              "backfaceVisibility": "hidden",
            },
            {
              "transform": [
                {
                  "rotateX": "0deg",
                },
              ],
            },
            {
              "opacity": 1,
            },
          ]
        }
      >
        <TouchableWithoutFeedback
          onPress={[Function]}
        >
          <WithTheme(EdgeTextComponent)>
            0 undefined
          </WithTheme(EdgeTextComponent)>
        </TouchableWithoutFeedback>
        <TouchableWithoutFeedback
          onPress={[Function]}
        >
          <View
            style={
              {
                "flexDirection": "row",
                "marginRight": 34,
                "minHeight": 45,
              }
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                  "marginRight": 11,
                }
              }
            >
              <BlinkingCursor
                showCursor={false}
              />
              <WithTheme(EdgeTextComponent)
                style={
                  {
                    "color": "#87939E",
                    "fontFamily": "Quicksand-Medium",
                    "fontSize": 34,
                    "marginLeft": -2,
                  }
                }
              >
                Amount
              </WithTheme(EdgeTextComponent)>
            </View>
            <WithTheme(EdgeTextComponent)
              style={
                {
                  "color": "#87939E",
                  "paddingTop": 3,
                }
              }
            />
            <TextInput
              autoCorrect={false}
              editable={true}
              inputAccessoryViewID="string"
              keyboardType="numeric"
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              onSubmitEditing={[Function]}
              returnKeyType="done"
              style={
                {
                  "height": 0,
                  "position": "absolute",
                  "width": 0,
                }
              }
              value=""
            />
          </View>
        </TouchableWithoutFeedback>
      </ForwardRef(AnimatedComponentWrapper)>
      <ForwardRef(AnimatedComponentWrapper)
        pointerEvents="none"
        style={
          [
            {
              "backfaceVisibility": "hidden",
            },
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "transform": [
                {
                  "rotateX": "180deg",
                },
              ],
            },
            {
              "opacity": 0,
            },
          ]
        }
      >
        <TouchableWithoutFeedback
          onPress={[Function]}
        >
          <WithTheme(EdgeTextComponent)>
            0 undefined
          </WithTheme(EdgeTextComponent)>
        </TouchableWithoutFeedback>
        <TouchableWithoutFeedback
          onPress={[Function]}
        >
          <View
            style={
              {
                "flexDirection": "row",
                "marginRight": 34,
                "minHeight": 45,
              }
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                  "marginRight": 11,
                }
              }
            >
              <BlinkingCursor
                showCursor={false}
              />
              <WithTheme(EdgeTextComponent)
                style={
                  {
                    "color": "#87939E",
                    "fontFamily": "Quicksand-Medium",
                    "fontSize": 34,
                    "marginLeft": -2,
                  }
                }
              >
                Amount
              </WithTheme(EdgeTextComponent)>
            </View>
            <WithTheme(EdgeTextComponent)
              style={
                {
                  "color": "#87939E",
                  "paddingTop": 3,
                }
              }
            />
            <TextInput
              autoCorrect={false}
              editable={true}
              inputAccessoryViewID="string"
              keyboardType="numeric"
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              onSubmitEditing={[Function]}
              returnKeyType="done"
              style={
                {
                  "height": 0,
                  "position": "absolute",
                  "width": 0,
                }
              }
              value=""
            />
          </View>
        </TouchableWithoutFeedback>
      </ForwardRef(AnimatedComponentWrapper)>
    </View>
    <ButtonBox
      onPress={[Function]}
      paddingRem={
        [
          0.5,
          0,
          0.5,
          1,
        ]
      }
    >
      <Icon
        allowFontScaling={false}
        color="#00f1a2"
        name="exchange"
        size={39}
        style={
          {
            "marginRight": -3,
          }
        }
      />
    </ButtonBox>
  </View>
</React.Fragment>
`;
