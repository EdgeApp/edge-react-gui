// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FioDomainRegister should render with loading props 1`] = `
<Memo(SceneWrapperComponent)
  scroll={true}
>
  <Memo(SceneHeaderComponent)
    style={
      {
        "flexDirection": "row-reverse",
        "justifyContent": "flex-end",
        "marginRight": 22,
        "marginTop": 11,
      }
    }
    title="Register FIO Domain"
    underline={true}
    withTopMargin={true}
  >
    <Icon
      allowFontScaling={false}
      color="#FFFFFF"
      name="ios-at"
      size={34}
      style={
        {
          "marginRight": 11,
        }
      }
    />
  </Memo(SceneHeaderComponent)>
  <View
    style={
      {
        "marginHorizontal": 11,
      }
    }
  >
    <WithTheme(EdgeTextComponent)
      numberOfLines={3}
      style={
        [
          {
            "paddingBottom": 22,
            "paddingHorizontal": 11,
          },
          {
            "color": "#3dd9f4",
            "fontSize": 22,
          },
          {
            "paddingTop": 34,
          },
        ]
      }
    >
      Note that you need to use FIO to register a Crypto Handle on a custom domain.
    </WithTheme(EdgeTextComponent)>
    <WithTheme(EdgeTextComponent)
      numberOfLines={8}
      style={
        [
          {
            "paddingBottom": 22,
            "paddingHorizontal": 11,
          },
          {
            "color": "#3dd9f4",
            "fontSize": 22,
          },
        ]
      }
    >
      A FIO Crypto Handle consists of a username and a domain. If you purchase a custom domain, only you will able to register a Crypto Handle on it. Crypto Handle registrations will have to be paid for with FIO tokens from the same wallet which owns the domain.
    </WithTheme(EdgeTextComponent)>
    <CardUi4>
      <RowUi4
        onPress={[Function]}
        rightButtonType="editable"
        title="Choose a FIO Domain"
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <WithTheme(EdgeTextComponent)
            style={
              {
                "color": "#FFFFFF",
                "marginRight": 11,
              }
            }
          >
            
          </WithTheme(EdgeTextComponent)>
          <WithTheme(EdgeTextComponent)
            style={
              {
                "color": "#888888",
              }
            }
          >
            
          </WithTheme(EdgeTextComponent)>
        </View>
      </RowUi4>
    </CardUi4>
    <EdgeAnim
      enter={
        {
          "type": "fadeIn",
        }
      }
      exit={
        {
          "type": "fadeOut",
        }
      }
      visible={false}
    >
      <AlertCardUi4
        title=""
        type="error"
      />
    </EdgeAnim>
  </View>
</Memo(SceneWrapperComponent)>
`;
