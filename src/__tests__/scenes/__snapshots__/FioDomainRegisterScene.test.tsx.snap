// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`FioDomainRegister should render with loading props 1`] = `
[
  <BVLinearGradient
    colors={
      [
        4279900698,
        4279900698,
      ]
    }
    endPoint={
      {
        "x": 1,
        "y": 1,
      }
    }
    locations={null}
    onLayout={[Function]}
    startPoint={
      {
        "x": 0,
        "y": 0,
      }
    }
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={0}
      bbWidth={0}
      focusable={false}
      height={0}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        }
      }
      vbHeight={0}
      vbWidth={0}
      width={0}
    >
      <RNSVGGroup
        fill={
          {
            "payload": 4278190080,
            "type": 0,
          }
        }
      >
        <RNSVGDefs>
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -1,
                0.125,
                -167772161,
                0.25,
                -637534209,
                0.75,
                654311423,
                0.875,
                184549375,
                1,
                16777215,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad0"
            rx="50%"
            ry="50%"
          />
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -216279,
                0.0588,
                -216279,
                0.1765,
                -167988439,
                0.29410000000000003,
                -637750487,
                0.7646999999999999,
                654095145,
                0.8824,
                184333097,
                1,
                16560937,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad1"
            rx="50%"
            ry="50%"
          />
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -16719740,
                0.4667,
                -16719740,
                0.5333,
                -184491900,
                0.6,
                -654253948,
                0.8667,
                637591684,
                0.9333,
                167829636,
                1,
                57476,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad2"
            rx="50%"
            ry="50%"
          />
        </RNSVGDefs>
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          opacity={0.1}
        >
          <RNSVGCircle
            cx="10%"
            cy="10%"
            fill={
              {
                "brushRef": "grad0",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r={224.73239436619718}
          />
          <RNSVGCircle
            cx="95%"
            cy="30%"
            fill={
              {
                "brushRef": "grad1",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r={238.7781690140845}
          />
          <RNSVGCircle
            cx="-15%"
            cy="100%"
            fill={
              {
                "brushRef": "grad2",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r={421.37323943661977}
          />
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </BVLinearGradient>,
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      {
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 64,
      }
    }
    forwardedRef={[Function]}
    jestAnimatedStyle={
      {
        "value": {
          "maxHeight": 1334,
        },
      }
    }
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    scrollEventThrottle={1}
    scrollIndicatorInsets={
      {
        "right": 1,
      }
    }
    style={
      {
        "height": 1334,
        "maxHeight": 1334,
        "padding": 0,
        "width": 750,
      }
    }
  >
    <View>
      <View
        style={
          [
            {
              "justifyContent": "center",
              "marginHorizontal": 22,
              "paddingBottom": 22,
            },
            {
              "marginTop": 22,
            },
            {
              "flexDirection": "row-reverse",
              "justifyContent": "flex-end",
              "marginRight": 22,
              "marginTop": 11,
            },
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            adjustsFontSizeToFit={true}
            minimumFontScale={0.65}
            numberOfLines={1}
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                  "includeFontPadding": false,
                },
                {
                  "fontFamily": "Quicksand-Medium",
                  "fontSize": 27,
                },
                null,
              ]
            }
          >
            Register FIO Domain
          </Text>
        </View>
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#FFFFFF",
                "fontSize": 34,
              },
              {
                "marginRight": 11,
              },
              {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
      </View>
      <BVLinearGradient
        colors={
          [
            452984831,
            452984831,
          ]
        }
        endPoint={
          {
            "x": 1,
            "y": 0.5,
          }
        }
        locations={null}
        startPoint={
          {
            "x": 0,
            "y": 0.5,
          }
        }
        style={
          [
            {
              "alignSelf": "stretch",
              "height": 1,
            },
            {
              "marginBottom": 0,
              "marginLeft": 22,
              "marginRight": 0,
              "marginTop": 0,
            },
          ]
        }
      />
      <View
        style={
          {
            "marginHorizontal": 11,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.65}
          numberOfLines={3}
          style={
            [
              {
                "color": "#FFFFFF",
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "includeFontPadding": false,
              },
              [
                {
                  "paddingBottom": 22,
                  "paddingHorizontal": 11,
                },
                {
                  "color": "#3dd9f4",
                  "fontSize": 22,
                },
                {
                  "paddingTop": 34,
                },
              ],
              null,
            ]
          }
        >
          Note that you need to use FIO to register a Crypto Handle on a custom domain.
        </Text>
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.65}
          numberOfLines={8}
          style={
            [
              {
                "color": "#FFFFFF",
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "includeFontPadding": false,
              },
              [
                {
                  "paddingBottom": 22,
                  "paddingHorizontal": 11,
                },
                {
                  "color": "#3dd9f4",
                  "fontSize": 22,
                },
              ],
              null,
            ]
          }
        >
          A FIO Crypto Handle consists of a username and a domain. If you purchase a custom domain, only you will able to register a Crypto Handle on it. Crypto Handle registrations will have to be paid for with FIO tokens from the same wallet which owns the domain.
        </Text>
        <View
          style={
            [
              {
                "alignSelf": "stretch",
                "borderRadius": 16,
              },
              {
                "marginBottom": 11,
                "marginLeft": 11,
                "marginRight": 11,
                "marginTop": 11,
              },
              {
                "paddingBottom": 11,
                "paddingLeft": 11,
                "paddingRight": 11,
                "paddingTop": 11,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              {
                "backgroundColor": "rgba(255, 255, 255, .1)",
                "borderRadius": 16,
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "flexDirection": "row",
                  "flexShrink": 1,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexShrink": 1,
                  },
                  {
                    "marginRight": 34,
                  },
                ]
              }
            >
              <Text
                adjustsFontSizeToFit={true}
                ellipsizeMode="tail"
                minimumFontScale={0.65}
                numberOfLines={1}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontFamily": "Quicksand-Regular",
                      "fontSize": 22,
                      "includeFontPadding": false,
                    },
                    {
                      "color": "#3dd9f4",
                      "fontSize": 17,
                      "paddingRight": 22,
                    },
                    null,
                  ]
                }
              >
                Choose a FIO Domain
              </Text>
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  adjustsFontSizeToFit={true}
                  minimumFontScale={0.65}
                  numberOfLines={1}
                  style={
                    [
                      {
                        "color": "#FFFFFF",
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 22,
                        "includeFontPadding": false,
                      },
                      {
                        "color": "#FFFFFF",
                        "marginRight": 11,
                      },
                      null,
                    ]
                  }
                />
                <Text
                  adjustsFontSizeToFit={true}
                  minimumFontScale={0.65}
                  numberOfLines={1}
                  style={
                    [
                      {
                        "color": "#FFFFFF",
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 22,
                        "includeFontPadding": false,
                      },
                      {
                        "color": "#888888",
                      },
                      null,
                    ]
                  }
                />
              </View>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={false}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "flex-end",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "right": 0,
                  "width": "100%",
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 22,
                    },
                    {
                      "color": "#00f1a2",
                      "marginLeft": 11,
                      "textAlign": "center",
                    },
                    {
                      "fontFamily": "FontAwesome",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>,
]
`;
