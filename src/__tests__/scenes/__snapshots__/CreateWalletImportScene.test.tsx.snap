// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`CreateWalletImportScene should render with loading props 1`] = `
<View
  style={
    [
      {
        "alignItems": "stretch",
        "flexDirection": "column",
        "justifyContent": "flex-start",
      },
      {
        "height": 1334,
        "width": 750,
      },
      {
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 64,
      },
      {
        "padding": 0,
      },
    ]
  }
>
  <BVLinearGradient
    colors={
      [
        4279900698,
        4279900698,
      ]
    }
    endPoint={
      {
        "x": 1,
        "y": 1,
      }
    }
    locations={null}
    onLayout={[Function]}
    startPoint={
      {
        "x": 0,
        "y": 0,
      }
    }
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={0}
      bbWidth={0}
      focusable={false}
      height={0}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        }
      }
      vbHeight={0}
      vbWidth={0}
      width={0}
    >
      <RNSVGGroup
        fill={
          {
            "payload": 4278190080,
            "type": 0,
          }
        }
      >
        <RNSVGDefs>
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -1,
                0.125,
                -167772161,
                0.25,
                -637534209,
                0.75,
                654311423,
                0.875,
                184549375,
                1,
                16777215,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad0"
            rx="50%"
            ry="50%"
          />
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -216279,
                0.0588,
                -216279,
                0.1765,
                -167988439,
                0.29410000000000003,
                -637750487,
                0.7646999999999999,
                654095145,
                0.8824,
                184333097,
                1,
                16560937,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad1"
            rx="50%"
            ry="50%"
          />
          <RNSVGRadialGradient
            cx="50%"
            cy="50%"
            fx="50%"
            fy="50%"
            gradient={
              [
                0,
                -16719740,
                0.4667,
                -16719740,
                0.5333,
                -184491900,
                0.6,
                -654253948,
                0.8667,
                637591684,
                0.9333,
                167829636,
                1,
                57476,
              ]
            }
            gradientTransform={null}
            gradientUnits={0}
            name="grad2"
            rx="50%"
            ry="50%"
          />
        </RNSVGDefs>
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          opacity={0.1}
        >
          <RNSVGCircle
            cx="10%"
            cy="10%"
            fill={
              {
                "brushRef": "grad0",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r={224.73239436619718}
          />
          <RNSVGCircle
            cx="95%"
            cy="30%"
            fill={
              {
                "brushRef": "grad1",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r={238.7781690140845}
          />
          <RNSVGCircle
            cx="-15%"
            cy="100%"
            fill={
              {
                "brushRef": "grad2",
                "type": 1,
              }
            }
            propList={
              [
                "fill",
              ]
            }
            r={421.37323943661977}
          />
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </BVLinearGradient>
  <View
    style={
      {
        "flexShrink": 1,
        "margin": 11,
      }
    }
  >
    <View
      style={
        {
          "justifyContent": "center",
          "overflow": "visible",
          "paddingBottom": 11,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 11,
            "marginHorizontal": 11,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          allowFontScaling={false}
          minimumFontScale={0.65}
          numberOfLines={1}
          style={
            [
              {
                "color": "#FFFFFF",
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "includeFontPadding": false,
              },
              {
                "fontFamily": "Quicksand-Medium",
                "fontSize": 27,
              },
              null,
            ]
          }
        >
          Import Wallet
        </Text>
      </View>
      <BVLinearGradient
        colors={
          [
            452984831,
            452984831,
          ]
        }
        endPoint={
          {
            "x": 1,
            "y": 0.5,
          }
        }
        locations={null}
        startPoint={
          {
            "x": 0,
            "y": 0.5,
          }
        }
        style={
          [
            {
              "borderBottomColor": "rgba(255, 255, 255, .1)",
              "borderBottomWidth": 1,
              "height": 1,
            },
            {
              "margin": 11,
              "marginRight": -22,
            },
          ]
        }
      />
    </View>
    <RCTScrollView>
      <View>
        <View
          style={
            {
              "flexDirection": "row",
              "justifyContent": "center",
              "marginVertical": 45,
            }
          }
        >
          <ImportKeySvg
            accessibilityHint="Import Key"
            color="#00f1a2"
            height={36}
            width={83}
          />
        </View>
        <Text
          adjustsFontSizeToFit={false}
          allowFontScaling={false}
          numberOfLines={0}
          style={
            [
              {
                "color": "#FFFFFF",
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "includeFontPadding": false,
              },
              {
                "marginBottom": 11,
                "marginLeft": 11,
                "marginRight": 11,
                "marginTop": 11,
              },
              false,
              null,
            ]
          }
        >
          Enter your private seed, private key, or active key to verify and restore the associated wallet
        </Text>
        <View
          marginRemStyle={
            {
              "marginBottom": 11,
              "marginLeft": 11,
              "marginRight": 11,
              "marginTop": 11,
            }
          }
          multiline={true}
          style={
            {
              "flexGrow": 1,
              "flexShrink": 1,
              "marginBottom": 11,
              "marginLeft": 11,
              "marginRight": 11,
              "marginTop": 11,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessible={false}
            collapsable={false}
            disableAnimation={0}
            focusAnimation={0}
            focusable={true}
            jestAnimatedProps={
              {
                "value": {},
              }
            }
            jestAnimatedStyle={
              {
                "value": {
                  "backgroundColor": "rgba(255, 255, 255, 0.2)",
                  "borderColor": "rgba(0, 241, 162, 0)",
                  "marginHorizontal": 0,
                  "opacity": 1,
                  "paddingVertical": 22,
                },
              }
            }
            jestInlineStyle={
              [
                {
                  "alignItems": "stretch",
                  "borderRadius": 11,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "paddingHorizontal": 17,
                },
              ]
            }
            multiline={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            scale={1}
            style={
              [
                {
                  "alignItems": "stretch",
                  "borderRadius": 11,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "paddingHorizontal": 17,
                },
                {
                  "backgroundColor": "rgba(255, 255, 255, 0.2)",
                  "borderColor": "rgba(0, 241, 162, 0)",
                  "marginHorizontal": 0,
                  "opacity": 1,
                  "paddingVertical": 22,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedProps={
                {
                  "value": {},
                }
              }
              jestAnimatedStyle={
                {
                  "value": {
                    "opacity": 0,
                    "width": 0,
                  },
                }
              }
              jestInlineStyle={
                [
                  {
                    "alignItems": "stretch",
                    "aspectRatio": 1,
                  },
                ]
              }
              nativeID="1"
              scale={0}
              style={
                [
                  {
                    "alignItems": "stretch",
                    "aspectRatio": 1,
                  },
                  {
                    "opacity": 0,
                    "width": 0,
                  },
                ]
              }
            />
            <View
              collapsable={false}
              focusValue={0}
              hasPlaceholder={true}
              jestAnimatedProps={
                {
                  "value": {},
                }
              }
              jestAnimatedStyle={
                {
                  "value": {
                    "marginBottom": -0,
                    "marginTop": 0,
                  },
                }
              }
              jestInlineStyle={
                [
                  {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "flex": 1,
                    "flexDirection": "row",
                    "left": 0,
                  },
                ]
              }
              nativeID="2"
              style={
                [
                  {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "flex": 1,
                    "flexDirection": "row",
                    "left": 0,
                  },
                  {
                    "marginBottom": -0,
                    "marginTop": 0,
                  },
                ]
              }
            >
              <View
                collapsable={false}
                jestAnimatedProps={
                  {
                    "value": {},
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {
                      "transform": [
                        {
                          "translateY": 0,
                        },
                        {
                          "translateX": 0,
                        },
                      ],
                    },
                  }
                }
                jestInlineStyle={
                  [
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "left": 8.8,
                      "margin": 0,
                      "paddingHorizontal": 0,
                      "paddingVertical": 0,
                      "position": "absolute",
                      "top": 0,
                    },
                  ]
                }
                nativeID="3"
                shift={0}
                style={
                  [
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "left": 8.8,
                      "margin": 0,
                      "paddingHorizontal": 0,
                      "paddingVertical": 0,
                      "position": "absolute",
                      "top": 0,
                    },
                    {
                      "transform": [
                        {
                          "translateY": 0,
                        },
                        {
                          "translateX": 0,
                        },
                      ],
                    },
                  ]
                }
              >
                <Text
                  collapsable={false}
                  disableAnimation={0}
                  focusAnimation={0}
                  jestAnimatedProps={
                    {
                      "value": {},
                    }
                  }
                  jestAnimatedStyle={
                    {
                      "value": {
                        "color": "rgba(255, 255, 255, 0.5019607843137255)",
                        "fontSize": 22,
                      },
                    }
                  }
                  jestInlineStyle={
                    [
                      {
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 22,
                        "includeFontPadding": false,
                      },
                    ]
                  }
                  nativeID="4"
                  scale={1}
                  shift={0}
                  style={
                    [
                      {
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 22,
                        "includeFontPadding": false,
                      },
                      {
                        "color": "rgba(255, 255, 255, 0.5019607843137255)",
                        "fontSize": 22,
                      },
                    ]
                  }
                >
                  Private Key or Private Seed
                </Text>
              </View>
              <TextInput
                accessibilityState={
                  {
                    "disabled": false,
                  }
                }
                accessible={true}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect={false}
                autoFocus={false}
                blurOnSubmit={false}
                collapsable={false}
                defaultValue=""
                disableAnimation={0}
                editable={true}
                focusAnimation={0}
                forwardedRef={[Function]}
                jestAnimatedProps={
                  {
                    "value": {},
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {
                      "color": "rgba(255, 255, 255, 1)",
                      "fontSize": 22,
                    },
                  }
                }
                jestInlineStyle={
                  [
                    {
                      "color": "hsla(0, 0%, 100%, 0.20)",
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "fontFamily": "Quicksand-Regular",
                      "margin": 0,
                      "paddingHorizontal": 0,
                      "paddingVertical": 0,
                      "transform": [
                        {
                          "translateY": -0,
                        },
                      ],
                    },
                  ]
                }
                keyboardType="email-address"
                multiline={true}
                nativeID="5"
                numberOfLines={10}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onSubmitEditing={[Function]}
                scale={1}
                selectionColor="rgba(255, 255, 255, .25)"
                style={
                  [
                    {
                      "color": "hsla(0, 0%, 100%, 0.20)",
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "fontFamily": "Quicksand-Regular",
                      "margin": 0,
                      "paddingHorizontal": 0,
                      "paddingVertical": 0,
                      "transform": [
                        {
                          "translateY": -0,
                        },
                      ],
                    },
                    {
                      "color": "rgba(255, 255, 255, 1)",
                      "fontSize": 22,
                    },
                  ]
                }
                testID="undefined.textInput"
                textAlignVertical="top"
              />
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "marginHorizontal": -22,
                  "marginVertical": -28,
                  "opacity": 1,
                  "paddingHorizontal": 22,
                  "paddingVertical": 28,
                }
              }
              testID="undefined.clearIcon"
            >
              <View
                collapsable={false}
                jestAnimatedProps={
                  {
                    "value": {},
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {
                      "opacity": 0,
                      "width": 0,
                    },
                  }
                }
                jestInlineStyle={
                  [
                    {
                      "alignItems": "stretch",
                      "aspectRatio": 1,
                    },
                  ]
                }
                nativeID="6"
                scale={0}
                style={
                  [
                    {
                      "alignItems": "stretch",
                      "aspectRatio": 1,
                    },
                    {
                      "opacity": 0,
                      "width": 0,
                    },
                  ]
                }
              >
                <Text
                  collapsable={false}
                  jestAnimatedProps={
                    {
                      "value": {},
                    }
                  }
                  jestAnimatedStyle={
                    {
                      "value": {
                        "color": "rgba(255, 255, 255, 0.5019607843137255)",
                        "fontFamily": "anticon",
                        "fontSize": 0,
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    }
                  }
                  jestInlineStyle={{}}
                  nativeID="7"
                  style={
                    [
                      {
                        "color": "rgba(255, 255, 255, 0.5019607843137255)",
                        "fontFamily": "anticon",
                        "fontSize": 0,
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          absolute={false}
          layout="solo"
          parentType="scene"
          style={
            {
              "alignItems": "center",
              "flexGrow": 1,
              "flexShrink": 0,
              "justifyContent": "flex-end",
              "margin": 11,
              "marginBottom": 67,
              "marginHorizontal": 11,
              "marginTop": 22,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                {
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                },
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              hitSlop={
                {
                  "bottom": 11,
                  "left": 10000,
                  "right": 10000,
                  "top": 11,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "borderRadius": 34,
                  "height": 67,
                  "justifyContent": "center",
                  "opacity": 1,
                  "overflow": "visible",
                  "paddingHorizontal": 34,
                  "paddingVertical": 0,
                  "position": "relative",
                }
              }
            >
              <BVLinearGradient
                colors={
                  [
                    4280299823,
                    4278214733,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  {
                    "borderRadius": 34,
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  adjustsFontSizeToFit={true}
                  allowFontScaling={false}
                  minimumFontScale={0.65}
                  numberOfLines={1}
                  style={
                    [
                      {
                        "color": "#FFFFFF",
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 22,
                        "includeFontPadding": false,
                      },
                      [
                        {
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Medium",
                          "fontSize": 22,
                        },
                        null,
                      ],
                      null,
                    ]
                  }
                >
                  Next
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
