// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Request should render with loaded props 1`] = `
<Memo(SceneWrapperComponent)
  accentColors={
    {
      "iconAccentColor": "#00000000",
    }
  }
  backgroundGradientColors={
    [
      "#1a1a1a",
      "#1a1a1a",
    ]
  }
  backgroundGradientEnd={
    {
      "x": 0,
      "y": 1,
    }
  }
  backgroundGradientStart={
    {
      "x": 0,
      "y": 0,
    }
  }
  overrideDots={
    [
      undefined,
      {
        "accentColor": "iconAccentColor",
      },
      null,
    ]
  }
>
  <View
    style={
      {
        "flex": 1,
        "justifyContent": "flex-start",
        "paddingHorizontal": 22,
      }
    }
  >
    <Memo(EdgeAnimInner)
      enter={
        {
          "distance": 80,
          "type": "fadeInUp",
        }
      }
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <EdgeText
        style={
          {
            "fontFamily": "Quicksand-Medium",
            "fontSize": 45,
          }
        }
      >
        Receive
      </EdgeText>
      <EdgeText
        style={
          {
            "alignSelf": "flex-end",
            "fontFamily": "Quicksand-Bold",
            "textAlign": "right",
          }
        }
      >
        1 undefined
      </EdgeText>
    </Memo(EdgeAnimInner)>
    <Memo(EdgeAnimInner)
      enter={
        {
          "distance": 50,
          "type": "fadeInUp",
        }
      }
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 11,
        }
      }
    >
      <TouchableOpacity
        onPress={[Function]}
        style={
          {
            "flex": 1,
            "justifyContent": "center",
            "marginRight": 6,
          }
        }
      >
        <EdgeText>
          You have 0.000012 undefined
        </EdgeText>
      </TouchableOpacity>
      <EdgeText
        style={
          {
            "alignSelf": "flex-end",
            "fontFamily": "Quicksand-Bold",
            "textAlign": "right",
          }
        }
      >
        <FiatText
          appendFiatCurrencyCode={true}
          nativeCryptoAmount="100000000"
          tokenId={null}
          wallet={
            {
              "balanceMap": Map {
                null => "1234",
              },
              "currencyInfo": {
                "displayName": "Bitcoin",
                "pluginId": "bitcoin",
              },
            }
          }
        />
      </EdgeText>
    </Memo(EdgeAnimInner)>
    <Memo(EdgeAnimInner)
      enter={
        {
          "distance": 25,
          "type": "fadeInUp",
        }
      }
    >
      <CardUi4
        marginRem={0}
      >
        <Memo
          forceField="crypto"
          headerCallback={[Function]}
          headerText="Receive to My Bitcoin"
          keyboardVisible={false}
          onAmountChanged={[Function]}
          returnKeyType="done"
          tokenId={null}
          wallet={
            {
              "balanceMap": Map {
                null => "1234",
              },
              "currencyInfo": {
                "displayName": "Bitcoin",
                "pluginId": "bitcoin",
              },
            }
          }
        />
      </CardUi4>
    </Memo(EdgeAnimInner)>
    <Carousel
      items={[]}
      keyExtractor={[Function]}
      onChangeItem={[Function]}
      renderItem={[Function]}
    />
    <Memo(EdgeAnimInner)
      enter={
        {
          "distance": 50,
          "type": "fadeInDown",
        }
      }
    >
      <TouchableOpacity
        accessible={false}
        disabled={false}
        onPress={[Function]}
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <EdgeText>
            Your Wallet Address
          </EdgeText>
          <Icon
            allowFontScaling={false}
            color="#00f1a2"
            name="chevron-forward"
            size={34}
          />
        </View>
        <EdgeText
          style={
            {
              "fontSize": 17,
            }
          }
        >
          Loadingâ€¦
        </EdgeText>
      </TouchableOpacity>
    </Memo(EdgeAnimInner)>
  </View>
  <Memo(EdgeAnimInner)
    enter={
      {
        "distance": 75,
        "type": "fadeInDown",
      }
    }
  >
    <ShareButtons
      copyToClipboard={[Function]}
      openFioAddressModal={[Function]}
      openShareModal={[Function]}
    />
  </Memo(EdgeAnimInner)>
</Memo(SceneWrapperComponent)>
`;

exports[`Request should render with loading props 1`] = `
<ActivityIndicator
  color="#FFFFFF"
  size="large"
  style={
    {
      "alignSelf": "center",
      "flex": 1,
    }
  }
/>
`;
