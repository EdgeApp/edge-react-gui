// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateWalletSelectCrypto should render with loading props 1`] = `
<BVLinearGradient
  colors={
    [
      4278585612,
      4279971643,
    ]
  }
  endPoint={
    {
      "x": 1,
      "y": 0,
    }
  }
  locations={null}
  startPoint={
    {
      "x": 0,
      "y": 0,
    }
  }
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
          "position": "absolute",
        },
        {
          "bottom": 0,
          "left": 0,
          "padding": 0,
          "right": 0,
          "top": 64,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "flex": 1,
          },
          {
            "marginBottom": -0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "justifyContent": "center",
              "marginHorizontal": 22,
              "paddingBottom": 22,
            },
            {
              "marginTop": 22,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            adjustsFontSizeToFit={true}
            minimumFontScale={0.65}
            numberOfLines={1}
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                  "includeFontPadding": false,
                },
                {
                  "fontFamily": "Quicksand-Medium",
                  "fontSize": 27,
                },
                null,
              ]
            }
          >
            Choose Wallets to Add
          </Text>
        </View>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={false}
        focusable={true}
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "rgba(255, 255, 255, 0)",
              "borderRadius": 11,
              "flexDirection": "row",
              "minHeight": 67,
              "paddingHorizontal": 22,
            },
            {
              "flexGrow": 0,
              "marginBottom": 11,
              "marginLeft": 22,
              "marginRight": 22,
              "marginTop": 11,
              "paddingLeft": 65,
              "paddingRight": 65,
              "paddingVertical": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "borderTopWidth": 1,
                "bottom": 0,
                "left": 22,
                "position": "absolute",
                "right": 22,
              },
              {
                "borderColor": undefined,
                "right": 11,
              },
            ]
          }
        />
        <View
          style={
            [
              {
                "borderBottomLeftRadius": 11,
                "borderBottomWidth": 1,
                "borderLeftWidth": 1,
                "borderRightWidth": 0,
                "borderTopLeftRadius": 11,
                "borderTopWidth": 1,
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "top": 0,
                "width": 22,
              },
              {
                "borderColor": undefined,
              },
            ]
          }
        />
        <View
          style={
            [
              {
                "borderBottomRightRadius": 11,
                "borderBottomWidth": 1,
                "borderLeftWidth": 0,
                "borderRightWidth": 1,
                "borderTopRightRadius": 11,
                "borderTopWidth": 1,
                "bottom": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 22,
              },
              {
                "borderColor": undefined,
              },
            ]
          }
        />
        <View
          style={
            [
              {
                "borderTopWidth": 1,
                "left": 22,
                "position": "absolute",
                "right": 22,
                "top": 0,
              },
              {
                "borderColor": undefined,
                "left": 22,
              },
            ]
          }
        />
        <View
          style={
            [
              {
                "height": 67,
                "justifyContent": "center",
                "left": 0,
                "paddingHorizontal": 22,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "paddingLeft": 65,
                "paddingRight": 65,
              },
            ]
          }
        >
          <Text
            accessible={true}
            numberOfLines={1}
            onLayout={[Function]}
            style={
              [
                {
                  "alignSelf": "flex-start",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                  "padding": 0,
                },
                {
                  "color": undefined,
                  "transform": [
                    {
                      "translateX": -0,
                    },
                    {
                      "translateY": -0,
                    },
                    {
                      "scale": 1,
                    },
                  ],
                },
              ]
            }
            testID="undefined.labelText"
          >
            Search Wallets
          </Text>
        </View>
        <View
          style={
            {
              "bottom": -45,
              "height": 45,
              "left": 0,
              "paddingLeft": 22,
              "paddingRight": 39,
              "position": "absolute",
              "right": 0,
            }
          }
        >
          <Text
            accessible={true}
            numberOfLines={2}
            style={
              [
                {
                  "color": "#E85466",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 17,
                },
                {
                  "opacity": 0,
                },
              ]
            }
            testID="undefined.subText"
          />
        </View>
        <Text
          accessible={true}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            [
              {
                "bottom": -10,
                "fontFamily": "Quicksand-Regular",
                "fontSize": 17,
                "position": "absolute",
                "right": 28,
              },
              {
                "color": undefined,
                "opacity": 0,
                "transform": [
                  {
                    "translateX": 6,
                  },
                  {
                    "scale": 0,
                  },
                ],
              },
            ]
          }
          testID="undefined.charLimit"
        />
        <Text
          allowFontScaling={false}
          style={
            [
              {
                "color": undefined,
                "fontSize": 12,
              },
              {
                "color": "rgba(255, 255, 255, .75)",
                "fontSize": 22,
                "left": 0,
                "padding": 22,
                "position": "absolute",
                "top": 0,
              },
              {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          î™°
        </Text>
        <TextInput
          accessibilityState={
            {
              "disabled": false,
            }
          }
          accessible={true}
          autoCapitalize="words"
          autoCorrect={false}
          autoFocus={false}
          editable={true}
          multiline={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onSubmitEditing={[Function]}
          secureTextEntry={false}
          selectionColor="#FFFFFF"
          style={
            [
              {
                "color": "#FFFFFF",
                "flexGrow": 1,
                "flexShrink": 1,
                "fontFamily": "Quicksand-Regular",
                "padding": 0,
              },
              {
                "fontSize": 22,
              },
            ]
          }
          testID="undefined.textInput"
          textAlignVertical="top"
          value=""
        />
      </View>
      <View
        style={
          {
            "flex": 1,
            "overflow": "hidden",
          }
        }
      >
        <RCTScrollView
          applyWindowCorrection={[Function]}
          automaticallyAdjustContentInsets={false}
          canChangeSize={true}
          contentContainerStyle={
            {
              "backgroundColor": undefined,
              "minHeight": 1,
              "minWidth": 1,
              "paddingLeft": 0,
              "paddingRight": 0,
            }
          }
          contentHeight={0}
          contentWidth={0}
          data={
            [
              {
                "currencyCode": "ETH",
                "displayName": "Ethereum",
                "key": "create-undefined-ethereum",
                "pluginId": "ethereum",
                "walletType": undefined,
              },
              {
                "createWalletIds": [
                  "123SomeWalletId",
                ],
                "currencyCode": "REP",
                "displayName": "Augur",
                "key": "create-ethereum-1985365e9f78359a9b6ad760e32412f4a445e862",
                "pluginId": "ethereum",
                "tokenId": "1985365e9f78359a9b6ad760e32412f4a445e862",
              },
              {
                "createWalletIds": [
                  "123SomeWalletId",
                ],
                "currencyCode": "REPV2",
                "displayName": "Augur v2",
                "key": "create-ethereum-221657776846890989a759ba2973e427dff5c9bb",
                "pluginId": "ethereum",
                "tokenId": "221657776846890989a759ba2973e427dff5c9bb",
              },
              {
                "createWalletIds": [
                  "123SomeWalletId",
                ],
                "currencyCode": "HERC",
                "displayName": "Hercules",
                "key": "create-ethereum-2e91e3e54c5788e9fdd6a181497fdcea1de1bcc1",
                "pluginId": "ethereum",
                "tokenId": "2e91e3e54c5788e9fdd6a181497fdcea1de1bcc1",
              },
              {
                "createWalletIds": [
                  "123SomeWalletId",
                ],
                "currencyCode": "DAI",
                "displayName": "Dai Stablecoin",
                "key": "create-ethereum-6b175474e89094c44da98b954eedeac495271d0f",
                "pluginId": "ethereum",
                "tokenId": "6b175474e89094c44da98b954eedeac495271d0f",
              },
            ]
          }
          dataProvider={
            DataProvider {
              "_data": [
                {
                  "currencyCode": "ETH",
                  "displayName": "Ethereum",
                  "key": "create-undefined-ethereum",
                  "pluginId": "ethereum",
                  "walletType": undefined,
                },
                {
                  "createWalletIds": [
                    "123SomeWalletId",
                  ],
                  "currencyCode": "REP",
                  "displayName": "Augur",
                  "key": "create-ethereum-1985365e9f78359a9b6ad760e32412f4a445e862",
                  "pluginId": "ethereum",
                  "tokenId": "1985365e9f78359a9b6ad760e32412f4a445e862",
                },
                {
                  "createWalletIds": [
                    "123SomeWalletId",
                  ],
                  "currencyCode": "REPV2",
                  "displayName": "Augur v2",
                  "key": "create-ethereum-221657776846890989a759ba2973e427dff5c9bb",
                  "pluginId": "ethereum",
                  "tokenId": "221657776846890989a759ba2973e427dff5c9bb",
                },
                {
                  "createWalletIds": [
                    "123SomeWalletId",
                  ],
                  "currencyCode": "HERC",
                  "displayName": "Hercules",
                  "key": "create-ethereum-2e91e3e54c5788e9fdd6a181497fdcea1de1bcc1",
                  "pluginId": "ethereum",
                  "tokenId": "2e91e3e54c5788e9fdd6a181497fdcea1de1bcc1",
                },
                {
                  "createWalletIds": [
                    "123SomeWalletId",
                  ],
                  "currencyCode": "DAI",
                  "displayName": "Dai Stablecoin",
                  "key": "create-ethereum-6b175474e89094c44da98b954eedeac495271d0f",
                  "pluginId": "ethereum",
                  "tokenId": "6b175474e89094c44da98b954eedeac495271d0f",
                },
              ],
              "_firstIndexToProcess": 0,
              "_hasStableIds": true,
              "_requiresDataChangeHandling": false,
              "_size": 5,
              "getStableId": [Function],
              "rowHasChanged": [Function],
            }
          }
          disableRecycling={false}
          estimatedItemSize={96}
          extendedState={
            {
              "value": {
                "create-ethereum-1985365e9f78359a9b6ad760e32412f4a445e862": false,
                "create-ethereum-221657776846890989a759ba2973e427dff5c9bb": false,
                "create-ethereum-2e91e3e54c5788e9fdd6a181497fdcea1de1bcc1": false,
                "create-ethereum-6b175474e89094c44da98b954eedeac495271d0f": false,
                "create-undefined-ethereum": false,
              },
            }
          }
          externalScrollView={[Function]}
          extraData={
            {
              "create-ethereum-1985365e9f78359a9b6ad760e32412f4a445e862": false,
              "create-ethereum-221657776846890989a759ba2973e427dff5c9bb": false,
              "create-ethereum-2e91e3e54c5788e9fdd6a181497fdcea1de1bcc1": false,
              "create-ethereum-6b175474e89094c44da98b954eedeac495271d0f": false,
              "create-undefined-ethereum": false,
            }
          }
          finalRenderAheadOffset={250}
          forceNonDeterministicRendering={true}
          horizontal={false}
          initialOffset={0}
          initialRenderIndex={0}
          isHorizontal={false}
          keyExtractor={[Function]}
          keyboardDismissMode="on-drag"
          keyboardShouldPersistTaps="handled"
          layoutProvider={
            GridLayoutProviderWithProps {
              "_acceptableRelayoutDelta": 1,
              "_getHeightOrWidth": [Function],
              "_getLayoutTypeForIndex": [Function],
              "_getSpan": [Function],
              "_hasExpired": false,
              "_maxSpan": 1,
              "_setLayoutForType": [Function],
              "_tempDim": {
                "height": 0,
                "width": 0,
              },
              "averageWindow": AverageWindow {
                "currentAverage": 96,
                "currentCount": 1,
                "inputValues": [
                  96,
                ],
                "nextIndex": 1,
              },
              "defaultEstimatedItemSize": 100,
              "layoutObject": {
                "size": undefined,
                "span": undefined,
              },
              "props": {
                "automaticallyAdjustContentInsets": false,
                "contentContainerStyle": {
                  "paddingBottom": 96,
                },
                "data": [
                  {
                    "currencyCode": "ETH",
                    "displayName": "Ethereum",
                    "key": "create-undefined-ethereum",
                    "pluginId": "ethereum",
                    "walletType": undefined,
                  },
                  {
                    "createWalletIds": [
                      "123SomeWalletId",
                    ],
                    "currencyCode": "REP",
                    "displayName": "Augur",
                    "key": "create-ethereum-1985365e9f78359a9b6ad760e32412f4a445e862",
                    "pluginId": "ethereum",
                    "tokenId": "1985365e9f78359a9b6ad760e32412f4a445e862",
                  },
                  {
                    "createWalletIds": [
                      "123SomeWalletId",
                    ],
                    "currencyCode": "REPV2",
                    "displayName": "Augur v2",
                    "key": "create-ethereum-221657776846890989a759ba2973e427dff5c9bb",
                    "pluginId": "ethereum",
                    "tokenId": "221657776846890989a759ba2973e427dff5c9bb",
                  },
                  {
                    "createWalletIds": [
                      "123SomeWalletId",
                    ],
                    "currencyCode": "HERC",
                    "displayName": "Hercules",
                    "key": "create-ethereum-2e91e3e54c5788e9fdd6a181497fdcea1de1bcc1",
                    "pluginId": "ethereum",
                    "tokenId": "2e91e3e54c5788e9fdd6a181497fdcea1de1bcc1",
                  },
                  {
                    "createWalletIds": [
                      "123SomeWalletId",
                    ],
                    "currencyCode": "DAI",
                    "displayName": "Dai Stablecoin",
                    "key": "create-ethereum-6b175474e89094c44da98b954eedeac495271d0f",
                    "pluginId": "ethereum",
                    "tokenId": "6b175474e89094c44da98b954eedeac495271d0f",
                  },
                ],
                "estimatedItemSize": 96,
                "extraData": {
                  "create-ethereum-1985365e9f78359a9b6ad760e32412f4a445e862": false,
                  "create-ethereum-221657776846890989a759ba2973e427dff5c9bb": false,
                  "create-ethereum-2e91e3e54c5788e9fdd6a181497fdcea1de1bcc1": false,
                  "create-ethereum-6b175474e89094c44da98b954eedeac495271d0f": false,
                  "create-undefined-ethereum": false,
                },
                "keyExtractor": [Function],
                "keyboardDismissMode": "on-drag",
                "keyboardShouldPersistTaps": "handled",
                "numColumns": 1,
                "renderItem": [Function],
              },
              "renderWindowInsets": {
                "height": 0,
                "width": 0,
              },
              "shouldRefreshWithAnchoring": true,
            }
          }
          maxRenderAhead={750}
          numColumns={1}
          onEndReached={[Function]}
          onEndReachedThreshold={0}
          onEndReachedThresholdRelative={0}
          onItemLayout={[Function]}
          onLayout={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onSizeChanged={[Function]}
          onVisibleIndicesChanged={[Function]}
          removeClippedSubviews={false}
          renderAheadOffset={0}
          renderAheadStep={250}
          renderContentContainer={[Function]}
          renderItem={[Function]}
          renderItemContainer={[Function]}
          rowRenderer={[Function]}
          scrollEventThrottle={16}
          scrollThrottle={16}
          scrollViewProps={
            {
              "contentContainerStyle": {
                "backgroundColor": undefined,
                "minHeight": 1,
                "minWidth": 1,
                "paddingLeft": 0,
                "paddingRight": 0,
              },
              "onLayout": [Function],
              "onScrollBeginDrag": [Function],
              "refreshControl": undefined,
              "style": {
                "minHeight": 1,
                "minWidth": 1,
              },
            }
          }
          style={
            {
              "minHeight": 1,
              "minWidth": 1,
            }
          }
          suppressBoundedSizeException={true}
          windowCorrectionConfig={
            {
              "applyToInitialOffset": true,
              "applyToItemScroll": true,
              "value": {
                "endCorrection": 0,
                "startCorrection": 0,
                "windowShift": -0,
              },
            }
          }
        >
          <View>
            <View
              style={
                {
                  "flexDirection": "column",
                }
              }
            >
              <AutoLayoutView
                enableInstrumentation={false}
                horizontal={false}
                onBlankAreaEvent={[Function]}
                onLayout={[Function]}
                renderAheadOffset={0}
                scrollOffset={0}
                style={
                  {
                    "height": 0,
                    "width": 0,
                  }
                }
                windowSize={0}
              />
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        pointerEvents="none"
        style={
          {
            "opacity": 0,
          }
        }
      >
        <View
          style={
            {
              "alignSelf": "center",
              "bottom": 22,
              "position": "absolute",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "elevation": 2,
                "opacity": 1,
                "shadowColor": "#FFFFFF",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0.25,
                "shadowRadius": 8,
              }
            }
          >
            <BVLinearGradient
              colors={
                [
                  4278754931,
                  4278251938,
                ]
              }
              endPoint={
                {
                  "x": 1,
                  "y": 0,
                }
              }
              locations={null}
              startPoint={
                {
                  "x": 0,
                  "y": 0,
                }
              }
              style={
                [
                  {
                    "alignItems": "center",
                    "borderColor": "rgba(255, 255, 255, 0)",
                    "borderRadius": 6,
                    "borderWidth": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "minHeight": 67,
                    "minWidth": 202,
                  },
                  {
                    "alignSelf": "center",
                    "marginBottom": 0,
                    "marginLeft": -11,
                    "marginRight": -11,
                    "marginTop": 0,
                    "opacity": 1,
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                  },
                  {
                    "borderRadius": 6,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                  },
                ]
              }
            >
              <Text
                adjustsFontSizeToFit={true}
                minimumFontScale={0.75}
                numberOfLines={1}
                style={
                  {
                    "color": "#1b2f3b",
                    "fontFamily": "Quicksand-Medium",
                    "fontSize": 22,
                    "marginHorizontal": 0,
                    "paddingBottom": 11,
                    "paddingLeft": 17,
                    "paddingRight": 17,
                    "paddingTop": 11,
                    "textShadowColor": "#000000",
                    "textShadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "textShadowRadius": 0,
                  }
                }
              >
                Next
              </Text>
            </BVLinearGradient>
          </View>
        </View>
      </View>
    </View>
  </View>
</BVLinearGradient>
`;
