// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CurrencyNotificationComponent should render with loading props 1`] = `
<BVLinearGradient
  colors={
    [
      4278585612,
      4279971643,
    ]
  }
  endPoint={
    {
      "x": 1,
      "y": 0,
    }
  }
  locations={null}
  startPoint={
    {
      "x": 0,
      "y": 0,
    }
  }
  style={
    {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
          "position": "absolute",
        },
        {
          "bottom": 0,
          "left": 0,
          "padding": 0,
          "right": 0,
          "top": 64,
        },
      ]
    }
  >
    <RCTScrollView>
      <View>
        <View
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "rgba(255, 255, 255, 0)",
              "flexDirection": "row",
              "marginBottom": 1,
              "minHeight": 67,
              "padding": 11,
            }
          }
        >
          <Text
            style={
              {
                "color": "#FFFFFF",
                "flexGrow": 1,
                "flexShrink": 1,
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "paddingHorizontal": 11,
                "textAlign": "left",
              }
            }
          >
            3% change within 1 hour
          </Text>
          <View>
            <View
              pending={false}
              style={
                [
                  {
                    "aspectRatio": 1,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": 1,
                  },
                  {
                    "opacity": 0,
                  },
                ]
              }
            >
              <ActivityIndicator
                color="#00f1a2"
                style={
                  {
                    "height": 34,
                    "marginHorizontal": 11,
                  }
                }
              />
            </View>
            <View
              pending={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  {
                    "marginHorizontal": 11,
                    "padding": 0,
                  }
                }
              >
                <RCTSwitch
                  accessibilityRole="switch"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  onTintColor="#00f1a2"
                  style={
                    [
                      {
                        "height": 31,
                        "width": 51,
                      },
                      {
                        "backgroundColor": "#87939E",
                        "borderRadius": 16,
                      },
                    ]
                  }
                  tintColor="#87939E"
                  value={true}
                />
              </View>
            </View>
          </View>
        </View>
        <View
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "rgba(255, 255, 255, 0)",
              "flexDirection": "row",
              "marginBottom": 1,
              "minHeight": 67,
              "padding": 11,
            }
          }
        >
          <Text
            style={
              {
                "color": "#FFFFFF",
                "flexGrow": 1,
                "flexShrink": 1,
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "paddingHorizontal": 11,
                "textAlign": "left",
              }
            }
          >
            10% change within 24 hours
          </Text>
          <View>
            <View
              pending={false}
              style={
                [
                  {
                    "aspectRatio": 1,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": 1,
                  },
                  {
                    "opacity": 0,
                  },
                ]
              }
            >
              <ActivityIndicator
                color="#00f1a2"
                style={
                  {
                    "height": 34,
                    "marginHorizontal": 11,
                  }
                }
              />
            </View>
            <View
              pending={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  {
                    "marginHorizontal": 11,
                    "padding": 0,
                  }
                }
              >
                <RCTSwitch
                  accessibilityRole="switch"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  onTintColor="#00f1a2"
                  style={
                    [
                      {
                        "height": 31,
                        "width": 51,
                      },
                      {
                        "backgroundColor": "#87939E",
                        "borderRadius": 16,
                      },
                    ]
                  }
                  tintColor="#87939E"
                  value={true}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</BVLinearGradient>
`;
