// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`SendScene2 1 spendTarget 1`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send to Address
                  </Text>
                  <View
                    collapsable={false}
                    entering={
                      StretchInY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    exiting={
                      StretchOutY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    jestAnimatedStyle={
                      {
                        "value": {},
                      }
                    }
                    layout={
                      LinearTransition {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": undefined,
                        "durationV": 300,
                        "easingV": undefined,
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      some pub address
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount:
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.3}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          [
                            {
                              "fontSize": 45,
                            },
                            undefined,
                          ],
                          null,
                        ]
                      }
                    >
                      0.00001234 BTC
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      € 0.23
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Add Another Address
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Network Fee:
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                        null,
                      ]
                    }
                  >
                     0 (0)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        entering={
          FadeInDown {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": 0,
            "durationV": 300,
            "easingV": [Function],
            "initialValues": {
              "transform": [
                {
                  "translateY": 120,
                },
              ],
            },
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        layout={
          LinearTransition {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": undefined,
            "durationV": 300,
            "easingV": undefined,
            "initialValues": undefined,
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
      >
        <View
          style={
            [
              undefined,
              {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#00604d",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "width": 295,
                },
                {
                  "backgroundColor": "#494949",
                },
                {
                  "width": 295,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedStyle={
                {
                  "value": {
                    "width": 295,
                  },
                }
              }
              style={
                {
                  "backgroundColor": "#494949",
                  "borderRadius": 27.5,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 295,
                }
              }
            />
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={1}
              handlerType="PanGestureHandler"
              jestAnimatedStyle={
                {
                  "value": {
                    "transform": [
                      {
                        "translateX": 240,
                      },
                    ],
                  },
                }
              }
              onGestureHandlerEvent={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#888888",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "transform": [
                    {
                      "translateX": 240,
                    },
                  ],
                  "width": 55,
                  "zIndex": 5,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 34,
                    },
                    {
                      "color": "#1a1a1a",
                      "fontSize": 51,
                    },
                    {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  [
                    {
                      "alignSelf": "center",
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "lineHeight": 55,
                      "position": "absolute",
                      "zIndex": 1,
                    },
                    {
                      "color": "#888888",
                    },
                  ],
                  null,
                ]
              }
            >
              Enter an Amount
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;

exports[`SendScene2 1 spendTarget with info tiles 1`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send to Address
                  </Text>
                  <View
                    collapsable={false}
                    entering={
                      StretchInY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    exiting={
                      StretchOutY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    jestAnimatedStyle={
                      {
                        "value": {},
                      }
                    }
                    layout={
                      LinearTransition {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": undefined,
                        "durationV": 300,
                        "easingV": undefined,
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      some pub address
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount:
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.3}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          [
                            {
                              "fontSize": 45,
                            },
                            undefined,
                          ],
                          null,
                        ]
                      }
                    >
                      0.00001234 BTC
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      € 0.23
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Add Another Address
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Network Fee:
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                        null,
                      ]
                    }
                  >
                     0 (0)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "flexGrow": 1,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    info tile label 1
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    info tile value 1
                  </Text>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "flexGrow": 1,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    info tile label 2
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    info tile value 2
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        entering={
          FadeInDown {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": 0,
            "durationV": 300,
            "easingV": [Function],
            "initialValues": {
              "transform": [
                {
                  "translateY": 120,
                },
              ],
            },
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        layout={
          LinearTransition {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": undefined,
            "durationV": 300,
            "easingV": undefined,
            "initialValues": undefined,
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
      >
        <View
          style={
            [
              undefined,
              {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#00604d",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "width": 295,
                },
                {
                  "backgroundColor": "#494949",
                },
                {
                  "width": 295,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedStyle={
                {
                  "value": {
                    "width": 295,
                  },
                }
              }
              style={
                {
                  "backgroundColor": "#494949",
                  "borderRadius": 27.5,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 295,
                }
              }
            />
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={2}
              handlerType="PanGestureHandler"
              jestAnimatedStyle={
                {
                  "value": {
                    "transform": [
                      {
                        "translateX": 240,
                      },
                    ],
                  },
                }
              }
              onGestureHandlerEvent={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#888888",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "transform": [
                    {
                      "translateX": 240,
                    },
                  ],
                  "width": 55,
                  "zIndex": 5,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 34,
                    },
                    {
                      "color": "#1a1a1a",
                      "fontSize": 51,
                    },
                    {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  [
                    {
                      "alignSelf": "center",
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "lineHeight": 55,
                      "position": "absolute",
                      "zIndex": 1,
                    },
                    {
                      "color": "#888888",
                    },
                  ],
                  null,
                ]
              }
            >
              Enter an Amount
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;

exports[`SendScene2 2 spendTargets 1`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Send To some pub address
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#FFFFFF",
                            "fontSize": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 0.00001234 BTC (€ 0.23)
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send to Address 2
                  </Text>
                  <View
                    collapsable={false}
                    entering={
                      StretchInY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    exiting={
                      StretchOutY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    jestAnimatedStyle={
                      {
                        "value": {},
                      }
                    }
                    layout={
                      LinearTransition {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": undefined,
                        "durationV": 300,
                        "easingV": undefined,
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      some pub address 2
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 2
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.3}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          [
                            {
                              "fontSize": 45,
                            },
                            undefined,
                          ],
                          null,
                        ]
                      }
                    >
                      0.00012345 BTC
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      € 2.26
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Add Another Address
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Network Fee:
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                        null,
                      ]
                    }
                  >
                     0 (0)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        entering={
          FadeInDown {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": 0,
            "durationV": 300,
            "easingV": [Function],
            "initialValues": {
              "transform": [
                {
                  "translateY": 120,
                },
              ],
            },
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        layout={
          LinearTransition {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": undefined,
            "durationV": 300,
            "easingV": undefined,
            "initialValues": undefined,
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
      >
        <View
          style={
            [
              undefined,
              {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#00604d",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "width": 295,
                },
                {
                  "backgroundColor": "#494949",
                },
                {
                  "width": 295,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedStyle={
                {
                  "value": {
                    "width": 295,
                  },
                }
              }
              style={
                {
                  "backgroundColor": "#494949",
                  "borderRadius": 27.5,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 295,
                }
              }
            />
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={3}
              handlerType="PanGestureHandler"
              jestAnimatedStyle={
                {
                  "value": {
                    "transform": [
                      {
                        "translateX": 240,
                      },
                    ],
                  },
                }
              }
              onGestureHandlerEvent={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#888888",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "transform": [
                    {
                      "translateX": 240,
                    },
                  ],
                  "width": 55,
                  "zIndex": 5,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 34,
                    },
                    {
                      "color": "#1a1a1a",
                      "fontSize": 51,
                    },
                    {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  [
                    {
                      "alignSelf": "center",
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "lineHeight": 55,
                      "position": "absolute",
                      "zIndex": 1,
                    },
                    {
                      "color": "#888888",
                    },
                  ],
                  null,
                ]
              }
            >
              Enter an Amount
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;

exports[`SendScene2 2 spendTargets hide tiles 1`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Send To some pub address
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#FFFFFF",
                            "fontSize": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 0.00001234 BTC (€ 0.23)
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 2
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.3}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          [
                            {
                              "fontSize": 45,
                            },
                            undefined,
                          ],
                          null,
                        ]
                      }
                    >
                      0.00012345 BTC
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      € 2.26
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Network Fee:
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                        null,
                      ]
                    }
                  >
                     0 (0)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        entering={
          FadeInDown {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": 0,
            "durationV": 300,
            "easingV": [Function],
            "initialValues": {
              "transform": [
                {
                  "translateY": 120,
                },
              ],
            },
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        layout={
          LinearTransition {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": undefined,
            "durationV": 300,
            "easingV": undefined,
            "initialValues": undefined,
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
      >
        <View
          style={
            [
              undefined,
              {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#00604d",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "width": 295,
                },
                {
                  "backgroundColor": "#494949",
                },
                {
                  "width": 295,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedStyle={
                {
                  "value": {
                    "width": 295,
                  },
                }
              }
              style={
                {
                  "backgroundColor": "#494949",
                  "borderRadius": 27.5,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 295,
                }
              }
            />
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={4}
              handlerType="PanGestureHandler"
              jestAnimatedStyle={
                {
                  "value": {
                    "transform": [
                      {
                        "translateX": 240,
                      },
                    ],
                  },
                }
              }
              onGestureHandlerEvent={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#888888",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "transform": [
                    {
                      "translateX": 240,
                    },
                  ],
                  "width": 55,
                  "zIndex": 5,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 34,
                    },
                    {
                      "color": "#1a1a1a",
                      "fontSize": 51,
                    },
                    {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  [
                    {
                      "alignSelf": "center",
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "lineHeight": 55,
                      "position": "absolute",
                      "zIndex": 1,
                    },
                    {
                      "color": "#888888",
                    },
                  ],
                  null,
                ]
              }
            >
              Enter an Amount
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;

exports[`SendScene2 2 spendTargets hide tiles 2`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Send To some pub address
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#FFFFFF",
                            "fontSize": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 0.00001234 BTC (€ 0.23)
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send to Address 2
                  </Text>
                  <View
                    collapsable={false}
                    entering={
                      StretchInY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    exiting={
                      StretchOutY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    jestAnimatedStyle={
                      {
                        "value": {},
                      }
                    }
                    layout={
                      LinearTransition {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": undefined,
                        "durationV": 300,
                        "easingV": undefined,
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      some pub address 2
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Network Fee:
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                        null,
                      ]
                    }
                  >
                     0 (0)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        entering={
          FadeInDown {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": 0,
            "durationV": 300,
            "easingV": [Function],
            "initialValues": {
              "transform": [
                {
                  "translateY": 120,
                },
              ],
            },
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        layout={
          LinearTransition {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": undefined,
            "durationV": 300,
            "easingV": undefined,
            "initialValues": undefined,
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
      >
        <View
          style={
            [
              undefined,
              {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#00604d",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "width": 295,
                },
                {
                  "backgroundColor": "#494949",
                },
                {
                  "width": 295,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedStyle={
                {
                  "value": {
                    "width": 295,
                  },
                }
              }
              style={
                {
                  "backgroundColor": "#494949",
                  "borderRadius": 27.5,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 295,
                }
              }
            />
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={5}
              handlerType="PanGestureHandler"
              jestAnimatedStyle={
                {
                  "value": {
                    "transform": [
                      {
                        "translateX": 240,
                      },
                    ],
                  },
                }
              }
              onGestureHandlerEvent={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#888888",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "transform": [
                    {
                      "translateX": 240,
                    },
                  ],
                  "width": 55,
                  "zIndex": 5,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 34,
                    },
                    {
                      "color": "#1a1a1a",
                      "fontSize": 51,
                    },
                    {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  [
                    {
                      "alignSelf": "center",
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "lineHeight": 55,
                      "position": "absolute",
                      "zIndex": 1,
                    },
                    {
                      "color": "#888888",
                    },
                  ],
                  null,
                ]
              }
            >
              Enter an Amount
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;

exports[`SendScene2 2 spendTargets hide tiles 3`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Send To some pub address
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#FFFFFF",
                            "fontSize": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 0.00001234 BTC (€ 0.23)
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Network Fee:
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                        null,
                      ]
                    }
                  >
                     0 (0)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        entering={
          FadeInDown {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": 0,
            "durationV": 300,
            "easingV": [Function],
            "initialValues": {
              "transform": [
                {
                  "translateY": 120,
                },
              ],
            },
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        layout={
          LinearTransition {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": undefined,
            "durationV": 300,
            "easingV": undefined,
            "initialValues": undefined,
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
      >
        <View
          style={
            [
              undefined,
              {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#00604d",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "width": 295,
                },
                {
                  "backgroundColor": "#494949",
                },
                {
                  "width": 295,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedStyle={
                {
                  "value": {
                    "width": 295,
                  },
                }
              }
              style={
                {
                  "backgroundColor": "#494949",
                  "borderRadius": 27.5,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 295,
                }
              }
            />
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={6}
              handlerType="PanGestureHandler"
              jestAnimatedStyle={
                {
                  "value": {
                    "transform": [
                      {
                        "translateX": 240,
                      },
                    ],
                  },
                }
              }
              onGestureHandlerEvent={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#888888",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "transform": [
                    {
                      "translateX": 240,
                    },
                  ],
                  "width": 55,
                  "zIndex": 5,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 34,
                    },
                    {
                      "color": "#1a1a1a",
                      "fontSize": 51,
                    },
                    {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  [
                    {
                      "alignSelf": "center",
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "lineHeight": 55,
                      "position": "absolute",
                      "zIndex": 1,
                    },
                    {
                      "color": "#888888",
                    },
                  ],
                  null,
                ]
              }
            >
              Enter an Amount
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;

exports[`SendScene2 2 spendTargets lock tiles 1`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Send To some pub address
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#FFFFFF",
                            "fontSize": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 0.00001234 BTC (€ 0.23)
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "flexGrow": 1,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send to Address 2
                  </Text>
                  <View
                    collapsable={false}
                    entering={
                      StretchInY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    exiting={
                      StretchOutY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    jestAnimatedStyle={
                      {
                        "value": {},
                      }
                    }
                    layout={
                      LinearTransition {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": undefined,
                        "durationV": 300,
                        "easingV": undefined,
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      some pub address 2
                    </Text>
                  </View>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "marginRight": 34,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 2
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.3}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          [
                            {
                              "fontSize": 45,
                            },
                            undefined,
                          ],
                          null,
                        ]
                      }
                    >
                      0.00012345 BTC
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      € 2.26
                    </Text>
                  </View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={false}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-end",
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": undefined,
                            "fontSize": 22,
                          },
                          {
                            "color": "#00f1a2",
                            "marginLeft": 11,
                            "textAlign": "center",
                          },
                          {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Network Fee:
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                        null,
                      ]
                    }
                  >
                     0 (0)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        entering={
          FadeInDown {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": 0,
            "durationV": 300,
            "easingV": [Function],
            "initialValues": {
              "transform": [
                {
                  "translateY": 120,
                },
              ],
            },
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        layout={
          LinearTransition {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": undefined,
            "durationV": 300,
            "easingV": undefined,
            "initialValues": undefined,
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
      >
        <View
          style={
            [
              undefined,
              {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#00604d",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "width": 295,
                },
                {
                  "backgroundColor": "#494949",
                },
                {
                  "width": 295,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedStyle={
                {
                  "value": {
                    "width": 295,
                  },
                }
              }
              style={
                {
                  "backgroundColor": "#494949",
                  "borderRadius": 27.5,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 295,
                }
              }
            />
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={7}
              handlerType="PanGestureHandler"
              jestAnimatedStyle={
                {
                  "value": {
                    "transform": [
                      {
                        "translateX": 240,
                      },
                    ],
                  },
                }
              }
              onGestureHandlerEvent={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#888888",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "transform": [
                    {
                      "translateX": 240,
                    },
                  ],
                  "width": 55,
                  "zIndex": 5,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 34,
                    },
                    {
                      "color": "#1a1a1a",
                      "fontSize": 51,
                    },
                    {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  [
                    {
                      "alignSelf": "center",
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "lineHeight": 55,
                      "position": "absolute",
                      "zIndex": 1,
                    },
                    {
                      "color": "#888888",
                    },
                  ],
                  null,
                ]
              }
            >
              Enter an Amount
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;

exports[`SendScene2 2 spendTargets lock tiles 2`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "flexGrow": 1,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Send To some pub address
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#FFFFFF",
                            "fontSize": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 0.00001234 BTC (€ 0.23)
                    </Text>
                  </View>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send to Address 2
                  </Text>
                  <View
                    collapsable={false}
                    entering={
                      StretchInY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    exiting={
                      StretchOutY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    jestAnimatedStyle={
                      {
                        "value": {},
                      }
                    }
                    layout={
                      LinearTransition {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": undefined,
                        "durationV": 300,
                        "easingV": undefined,
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      some pub address 2
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "flexGrow": 1,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 2
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.3}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          [
                            {
                              "fontSize": 45,
                            },
                            undefined,
                          ],
                          null,
                        ]
                      }
                    >
                      0.00012345 BTC
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      € 2.26
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Network Fee:
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                        null,
                      ]
                    }
                  >
                     0 (0)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        entering={
          FadeInDown {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": 0,
            "durationV": 300,
            "easingV": [Function],
            "initialValues": {
              "transform": [
                {
                  "translateY": 120,
                },
              ],
            },
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        layout={
          LinearTransition {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": undefined,
            "durationV": 300,
            "easingV": undefined,
            "initialValues": undefined,
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
      >
        <View
          style={
            [
              undefined,
              {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#00604d",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "width": 295,
                },
                {
                  "backgroundColor": "#494949",
                },
                {
                  "width": 295,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedStyle={
                {
                  "value": {
                    "width": 295,
                  },
                }
              }
              style={
                {
                  "backgroundColor": "#494949",
                  "borderRadius": 27.5,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 295,
                }
              }
            />
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={8}
              handlerType="PanGestureHandler"
              jestAnimatedStyle={
                {
                  "value": {
                    "transform": [
                      {
                        "translateX": 240,
                      },
                    ],
                  },
                }
              }
              onGestureHandlerEvent={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#888888",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "transform": [
                    {
                      "translateX": 240,
                    },
                  ],
                  "width": 55,
                  "zIndex": 5,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 34,
                    },
                    {
                      "color": "#1a1a1a",
                      "fontSize": 51,
                    },
                    {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  [
                    {
                      "alignSelf": "center",
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "lineHeight": 55,
                      "position": "absolute",
                      "zIndex": 1,
                    },
                    {
                      "color": "#888888",
                    },
                  ],
                  null,
                ]
              }
            >
              Enter an Amount
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;

exports[`SendScene2 2 spendTargets lock tiles 3`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "flexGrow": 1,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Send To some pub address
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#FFFFFF",
                            "fontSize": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 0.00001234 BTC (€ 0.23)
                    </Text>
                  </View>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "flexGrow": 1,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send to Address 2
                  </Text>
                  <View
                    collapsable={false}
                    entering={
                      StretchInY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    exiting={
                      StretchOutY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    jestAnimatedStyle={
                      {
                        "value": {},
                      }
                    }
                    layout={
                      LinearTransition {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": undefined,
                        "durationV": 300,
                        "easingV": undefined,
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={3}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      some pub address 2
                    </Text>
                  </View>
                </View>
              </View>
              <BVLinearGradient
                colors={
                  [
                    452984831,
                    452984831,
                  ]
                }
                endPoint={
                  {
                    "x": 1,
                    "y": 0.5,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.5,
                  }
                }
                style={
                  [
                    {
                      "borderBottomColor": "rgba(255, 255, 255, .1)",
                      "borderBottomWidth": 1,
                      "height": 1,
                    },
                    {
                      "margin": 11,
                    },
                  ]
                }
              />
              <View
                collapsable={false}
                entering={
                  StretchInY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                exiting={
                  StretchOutY {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": 0,
                    "durationV": 300,
                    "easingV": [Function],
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                layout={
                  LinearTransition {
                    "build": [Function],
                    "callbackV": undefined,
                    "dampingRatioV": undefined,
                    "dampingV": undefined,
                    "delayV": undefined,
                    "durationV": 300,
                    "easingV": undefined,
                    "initialValues": undefined,
                    "massV": undefined,
                    "overshootClampingV": undefined,
                    "randomizeDelay": false,
                    "reduceMotionV": "system",
                    "restDisplacementThresholdV": undefined,
                    "restSpeedThresholdV": undefined,
                    "rotateV": undefined,
                    "stiffnessV": undefined,
                    "type": undefined,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "flexDirection": "row",
                        "flexShrink": 1,
                      },
                      {
                        "marginBottom": 11,
                        "marginLeft": 11,
                        "marginRight": 11,
                        "marginTop": 11,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      [
                        {
                          "flexDirection": "column",
                          "flexShrink": 1,
                        },
                        {
                          "flexGrow": 1,
                        },
                      ]
                    }
                  >
                    <Text
                      adjustsFontSizeToFit={true}
                      ellipsizeMode="tail"
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          {
                            "color": "#3dd9f4",
                            "fontSize": 17,
                            "paddingRight": 22,
                          },
                          null,
                        ]
                      }
                    >
                      Amount: 2
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.3}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          [
                            {
                              "fontSize": 45,
                            },
                            undefined,
                          ],
                          null,
                        ]
                      }
                    >
                      0.00012345 BTC
                    </Text>
                    <Text
                      adjustsFontSizeToFit={true}
                      minimumFontScale={0.65}
                      numberOfLines={1}
                      style={
                        [
                          {
                            "color": "#FFFFFF",
                            "fontFamily": "Quicksand-Regular",
                            "fontSize": 22,
                            "includeFontPadding": false,
                          },
                          undefined,
                          null,
                        ]
                      }
                    >
                      € 2.26
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Network Fee:
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                        },
                        null,
                      ]
                    }
                  >
                     0 (0)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome5Free-Solid",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {
                          "fontWeight": "900",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        entering={
          FadeInDown {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": 0,
            "durationV": 300,
            "easingV": [Function],
            "initialValues": {
              "transform": [
                {
                  "translateY": 120,
                },
              ],
            },
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        layout={
          LinearTransition {
            "build": [Function],
            "callbackV": undefined,
            "dampingRatioV": undefined,
            "dampingV": undefined,
            "delayV": undefined,
            "durationV": 300,
            "easingV": undefined,
            "initialValues": undefined,
            "massV": undefined,
            "overshootClampingV": undefined,
            "randomizeDelay": false,
            "reduceMotionV": "system",
            "restDisplacementThresholdV": undefined,
            "restSpeedThresholdV": undefined,
            "rotateV": undefined,
            "stiffnessV": undefined,
            "type": undefined,
          }
        }
      >
        <View
          style={
            [
              undefined,
              {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#00604d",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "width": 295,
                },
                {
                  "backgroundColor": "#494949",
                },
                {
                  "width": 295,
                },
              ]
            }
          >
            <View
              collapsable={false}
              jestAnimatedStyle={
                {
                  "value": {
                    "width": 295,
                  },
                }
              }
              style={
                {
                  "backgroundColor": "#494949",
                  "borderRadius": 27.5,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 295,
                }
              }
            />
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={9}
              handlerType="PanGestureHandler"
              jestAnimatedStyle={
                {
                  "value": {
                    "transform": [
                      {
                        "translateX": 240,
                      },
                    ],
                  },
                }
              }
              onGestureHandlerEvent={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#888888",
                  "borderRadius": 27.5,
                  "height": 55,
                  "justifyContent": "center",
                  "transform": [
                    {
                      "translateX": 240,
                    },
                  ],
                  "width": 55,
                  "zIndex": 5,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": undefined,
                      "fontSize": 34,
                    },
                    {
                      "color": "#1a1a1a",
                      "fontSize": 51,
                    },
                    {
                      "fontFamily": "Entypo",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              adjustsFontSizeToFit={true}
              minimumFontScale={0.65}
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "Quicksand-Regular",
                    "fontSize": 22,
                    "includeFontPadding": false,
                  },
                  [
                    {
                      "alignSelf": "center",
                      "color": "#FFFFFF",
                      "fontSize": 17,
                      "lineHeight": 55,
                      "position": "absolute",
                      "zIndex": 1,
                    },
                    {
                      "color": "#888888",
                    },
                  ],
                  null,
                ]
              }
            >
              Enter an Amount
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;

exports[`SendScene2 Render SendScene 1`] = `
[
  <View
    style={
      [
        {
          "alignItems": "stretch",
          "flexDirection": "column",
          "justifyContent": "flex-start",
        },
        {
          "height": 1334,
          "width": 750,
        },
        {
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 64,
        },
        {
          "padding": 11,
        },
      ]
    }
  >
    <BVLinearGradient
      colors={
        [
          4279900698,
          4279900698,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 1,
        }
      }
      locations={null}
      onLayout={[Function]}
      startPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={0}
        bbWidth={0}
        focusable={false}
        height={0}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          }
        }
        vbHeight={0}
        vbWidth={0}
        width={0}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGDefs>
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -1,
                  0.125,
                  -167772161,
                  0.25,
                  -637534209,
                  0.75,
                  654311423,
                  0.875,
                  184549375,
                  1,
                  16777215,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad0"
              rx="50%"
              ry="50%"
            />
            <RNSVGRadialGradient
              cx="50%"
              cy="50%"
              fx="50%"
              fy="50%"
              gradient={
                [
                  0,
                  -16777216,
                  0.0588,
                  -16777216,
                  0.1765,
                  -184549376,
                  0.29410000000000003,
                  -654311424,
                  0.7646999999999999,
                  637534208,
                  0.8824,
                  167772160,
                  1,
                  0,
                ]
              }
              gradientTransform={null}
              gradientUnits={0}
              name="grad1"
              rx="50%"
              ry="50%"
            />
          </RNSVGDefs>
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            opacity={0.1}
          >
            <RNSVGCircle
              cx="10%"
              cy="10%"
              fill={
                {
                  "brushRef": "grad0",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={224.73239436619718}
            />
            <RNSVGCircle
              cx="95%"
              cy="30%"
              fill={
                {
                  "brushRef": "grad1",
                  "type": 1,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
              r={238.7781690140845}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </BVLinearGradient>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 112,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
      enableOnAndroid={true}
      extraScrollHeight={62}
      innerRef={[Function]}
      scrollIndicatorInsets={
        {
          "right": 1,
        }
      }
      style={
        {
          "margin": 11,
          "marginBottom": 0,
        }
      }
    >
      <View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "marginRight": 34,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send from Wallet
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={3}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#FFFFFF",
                          "fontSize": 22,
                        },
                        null,
                      ]
                    }
                  >
                    My Bitcoin (BTC)
                  </Text>
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={false}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "flex-end",
                      "height": "100%",
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": undefined,
                          "fontSize": 22,
                        },
                        {
                          "color": "#00f1a2",
                          "marginLeft": 11,
                          "textAlign": "center",
                        },
                        {
                          "fontFamily": "FontAwesome",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInUp {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": -40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 11,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 11,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              style={
                [
                  {
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                  {
                    "marginVertical": 0,
                  },
                ]
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "backgroundColor": "rgba(255, 255, 255, 0)",
                      "flexDirection": "row",
                      "flexShrink": 1,
                    },
                    {
                      "marginBottom": 11,
                      "marginLeft": 11,
                      "marginRight": 11,
                      "marginTop": 11,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "column",
                        "flexShrink": 1,
                      },
                      {
                        "flexGrow": 1,
                      },
                    ]
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    ellipsizeMode="tail"
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "color": "#3dd9f4",
                          "fontSize": 17,
                          "paddingRight": 22,
                        },
                        null,
                      ]
                    }
                  >
                    Send to Address
                  </Text>
                  <View
                    collapsable={false}
                    entering={
                      StretchInY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    exiting={
                      StretchOutY {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": 0,
                        "durationV": 300,
                        "easingV": [Function],
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    jestAnimatedStyle={
                      {
                        "value": {},
                      }
                    }
                    layout={
                      LinearTransition {
                        "build": [Function],
                        "callbackV": undefined,
                        "dampingRatioV": undefined,
                        "dampingV": undefined,
                        "delayV": undefined,
                        "durationV": 300,
                        "easingV": undefined,
                        "initialValues": undefined,
                        "massV": undefined,
                        "overshootClampingV": undefined,
                        "randomizeDelay": false,
                        "reduceMotionV": "system",
                        "restDisplacementThresholdV": undefined,
                        "restSpeedThresholdV": undefined,
                        "rotateV": undefined,
                        "stiffnessV": undefined,
                        "type": undefined,
                      }
                    }
                    style={
                      {
                        "alignItems": "flex-start",
                        "alignSelf": "stretch",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingTop": 17,
                      }
                    }
                  >
                    <View
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": false,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "column",
                          "height": 67,
                          "justifyContent": "space-evenly",
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        selectable={false}
                        style={
                          [
                            {
                              "color": "#00f1a2",
                              "fontSize": 45,
                            },
                            undefined,
                            {
                              "fontFamily": "FontAwesome",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            {},
                          ]
                        }
                      >
                        
                      </Text>
                      <Text
                        adjustsFontSizeToFit={true}
                        minimumFontScale={0.65}
                        numberOfLines={1}
                        style={
                          [
                            {
                              "color": "#FFFFFF",
                              "fontFamily": "Quicksand-Regular",
                              "fontSize": 22,
                              "includeFontPadding": false,
                            },
                            {
                              "alignSelf": "center",
                              "color": "#00f1a2",
                              "fontSize": 17,
                              "marginTop": 6,
                            },
                            null,
                          ]
                        }
                      >
                        Enter
                      </Text>
                    </View>
                    <View
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": false,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "column",
                          "height": 67,
                          "justifyContent": "space-evenly",
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        selectable={false}
                        style={
                          [
                            {
                              "color": "#00f1a2",
                              "fontSize": 45,
                            },
                            undefined,
                            {
                              "fontFamily": "FontAwesome5Free-Solid",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            {
                              "fontWeight": "900",
                            },
                          ]
                        }
                      >
                        
                      </Text>
                      <Text
                        adjustsFontSizeToFit={true}
                        minimumFontScale={0.65}
                        numberOfLines={1}
                        style={
                          [
                            {
                              "color": "#FFFFFF",
                              "fontFamily": "Quicksand-Regular",
                              "fontSize": 22,
                              "includeFontPadding": false,
                            },
                            {
                              "alignSelf": "center",
                              "color": "#00f1a2",
                              "fontSize": 17,
                              "marginTop": 6,
                            },
                            null,
                          ]
                        }
                      >
                        Scan
                      </Text>
                    </View>
                    <View
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": false,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "column",
                          "height": 67,
                          "justifyContent": "space-evenly",
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        selectable={false}
                        style={
                          [
                            {
                              "color": "#00f1a2",
                              "fontSize": 45,
                            },
                            undefined,
                            {
                              "fontFamily": "FontAwesome5Free-Regular",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            {
                              "fontWeight": "400",
                            },
                          ]
                        }
                      >
                        
                      </Text>
                      <Text
                        adjustsFontSizeToFit={true}
                        minimumFontScale={0.65}
                        numberOfLines={1}
                        style={
                          [
                            {
                              "color": "#FFFFFF",
                              "fontFamily": "Quicksand-Regular",
                              "fontSize": 22,
                              "includeFontPadding": false,
                            },
                            {
                              "alignSelf": "center",
                              "color": "#00f1a2",
                              "fontSize": 17,
                              "marginTop": 6,
                            },
                            null,
                          ]
                        }
                      >
                        Paste
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 40,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        />
        <View
          collapsable={false}
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": 0,
              "durationV": 300,
              "easingV": [Function],
              "initialValues": {
                "transform": [
                  {
                    "translateY": 80,
                  },
                ],
              },
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          layout={
            LinearTransition {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": 300,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": undefined,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": undefined,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignSelf": "stretch",
                  "borderRadius": 16,
                },
                {
                  "marginBottom": 34,
                  "marginLeft": 11,
                  "marginRight": 11,
                  "marginTop": 34,
                },
                {
                  "paddingBottom": 11,
                  "paddingLeft": 11,
                  "paddingRight": 11,
                  "paddingTop": 11,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 255, 255, .1)",
                  "borderRadius": 16,
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <BVLinearGradient
                colors={
                  [
                    1886857999,
                    1887591201,
                    1887591201,
                    1886857999,
                  ]
                }
                endPoint={
                  {
                    "x": 0.9,
                    "y": 0,
                  }
                }
                locations={null}
                startPoint={
                  {
                    "x": 0,
                    "y": 0.9,
                  }
                }
                style={
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <View
              style={
                {
                  "margin": 11,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "#FFFFFF",
                        "fontSize": 28,
                      },
                      {
                        "marginRight": 4,
                      },
                      {
                        "fontFamily": "Ionicons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
                <Text
                  adjustsFontSizeToFit={true}
                  minimumFontScale={0.65}
                  numberOfLines={0}
                  style={
                    [
                      {
                        "color": "#FFFFFF",
                        "fontFamily": "Quicksand-Regular",
                        "fontSize": 22,
                        "includeFontPadding": false,
                      },
                      {
                        "flexShrink": 1,
                        "fontFamily": "Quicksand-Medium",
                        "marginLeft": 4,
                      },
                      null,
                    ]
                  }
                >
                  Scam Warning
                </Text>
              </View>
              <View
                style={
                  {
                    "marginTop": 11,
                  }
                }
              >
                <View
                  style={
                    {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "fontSize": 17,
                          "marginLeft": 4,
                        },
                        null,
                      ]
                    }
                  >
                    • 
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={0}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "fontSize": 17,
                          "marginLeft": 4,
                        },
                        null,
                      ]
                    }
                  >
                    Edge will not give financial advice.
                  </Text>
                </View>
                <View
                  style={
                    {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "fontSize": 17,
                          "marginLeft": 4,
                        },
                        null,
                      ]
                    }
                  >
                    • 
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={0}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "fontSize": 17,
                          "marginLeft": 4,
                        },
                        null,
                      ]
                    }
                  >
                    Cryptocurrency transactions are irreversible.
                  </Text>
                </View>
                <View
                  style={
                    {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={1}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "fontSize": 17,
                          "marginLeft": 4,
                        },
                        null,
                      ]
                    }
                  >
                    • 
                  </Text>
                  <Text
                    adjustsFontSizeToFit={true}
                    minimumFontScale={0.65}
                    numberOfLines={0}
                    style={
                      [
                        {
                          "color": "#FFFFFF",
                          "fontFamily": "Quicksand-Regular",
                          "fontSize": 22,
                          "includeFontPadding": false,
                        },
                        {
                          "fontSize": 17,
                          "marginLeft": 4,
                        },
                        null,
                      ]
                    }
                  >
                    Do not send money to people or organizations you do not know.
                  </Text>
                </View>
              </View>
              <Text
                adjustsFontSizeToFit={true}
                minimumFontScale={0.65}
                numberOfLines={10}
                style={
                  [
                    {
                      "color": "#FFFFFF",
                      "fontFamily": "Quicksand-Regular",
                      "fontSize": 22,
                      "includeFontPadding": false,
                    },
                    {
                      "fontSize": 17,
                      "marginHorizontal": 6,
                      "marginTop": 11,
                    },
                    null,
                  ]
                }
              >
                If you have any questions or concerns regarding this send, please contact support@edge.app
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      hasNotifications={false}
      insetBottom={0}
      style={
        {
          "alignItems": "center",
          "bottom": 45,
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    />
  </View>,
  <View
    collapsable={false}
    footerHeight={0}
    hasTabs={false}
    insetBottom={0}
    jestAnimatedStyle={
      {
        "value": {
          "transform": [
            {
              "translateY": -0,
            },
          ],
        },
      }
    }
    onLayout={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": 11,
        "justifyContent": "flex-end",
        "paddingHorizontal": 11,
        "position": "absolute",
        "transform": [
          {
            "translateY": -0,
          },
        ],
      }
    }
  />,
]
`;
