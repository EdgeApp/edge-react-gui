// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CategoryModal should render with a subcategory 1`] = `
[
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BlurView
      blurAmount={10}
      blurType="light"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
  </View>,
  <View
    collapsable={false}
    style={
      {
        "alignSelf": "flex-end",
        "backgroundColor": "#121d25",
        "borderColor": "rgba(255, 255, 255, 0)",
        "borderTopLeftRadius": 22,
        "borderTopRightRadius": 22,
        "borderWidth": 0,
        "flexDirection": undefined,
        "flexShrink": 1,
        "justifyContent": undefined,
        "marginBottom": -64,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 0,
        "maxHeight": undefined,
        "overflow": "visible",
        "paddingBottom": 86,
        "paddingLeft": 22,
        "paddingRight": 22,
        "paddingTop": 22,
        "shadowOffset": {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 1,
        "shadowRadius": 10,
        "transform": [
          {
            "translateY": 1334,
          },
        ],
        "width": 512,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "margin": 11,
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Medium",
              "fontSize": 27,
              "marginVertical": 11,
            },
            {
              "textAlign": "center",
            },
            {
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
          ]
        }
      >
        Choose a Category
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 22,
          "marginHorizontal": 22,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "hsla(0, 0%, 100%, 0.20)",
            "borderColor": "hsla(0, 0%, 100%, 0.20)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "opacity": 1,
            "padding": 7,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.25}
          numberOfLines={1}
          style={
            {
              "color": "#06090c",
              "fontFamily": "Quicksand-Bold",
              "fontSize": 14,
              "marginHorizontal": 7,
            }
          }
        >
          Income
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0)",
            "borderColor": "rgba(255, 255, 255, 0)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "opacity": 1,
            "padding": 7,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.25}
          numberOfLines={1}
          style={
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Bold",
              "fontSize": 14,
              "marginHorizontal": 7,
            }
          }
        >
          Expense
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0)",
            "borderColor": "rgba(255, 255, 255, 0)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "opacity": 1,
            "padding": 7,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.25}
          numberOfLines={1}
          style={
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Bold",
              "fontSize": 14,
              "marginHorizontal": 7,
            }
          }
        >
          Transfer
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0)",
            "borderColor": "rgba(255, 255, 255, 0)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "opacity": 1,
            "padding": 7,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.25}
          numberOfLines={1}
          style={
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Bold",
              "fontSize": 14,
              "marginHorizontal": 7,
            }
          }
        >
          Exchange
        </Text>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={false}
      disableAnimation={
        {
          "value": 0,
        }
      }
      focusAnimation={
        {
          "value": 0,
        }
      }
      focusable={true}
      multiline={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      scale={
        {
          "value": 1,
        }
      }
      style={
        [
          {
            "alignItems": "center",
            "borderRadius": 11,
            "borderWidth": 1,
            "flex": undefined,
            "flexDirection": "row",
            "paddingHorizontal": 22,
          },
          {
            "backgroundColor": undefined,
            "borderColor": undefined,
            "marginHorizontal": undefined,
            "opacity": undefined,
            "paddingVertical": 17.6,
          },
        ]
      }
    >
      <View
        scale={
          {
            "value": 0,
          }
        }
        style={
          [
            {
              "alignItems": "stretch",
              "aspectRatio": 1,
            },
            {
              "opacity": 0,
              "width": 0,
            },
          ]
        }
      />
      <View
        focusValue={
          {
            "value": 1,
          }
        }
        hasPlaceholder={true}
        style={
          [
            {
              "alignItems": "flex-start",
              "alignSelf": "flex-start",
              "flex": 1,
              "flexDirection": "row",
            },
            {
              "marginBottom": NaN,
              "marginTop": undefined,
            },
          ]
        }
      >
        <View
          shift={
            {
              "value": 1,
            }
          }
          style={
            [
              {
                "alignItems": "center",
                "justifyContent": "center",
                "margin": 0,
                "paddingHorizontal": 11,
                "paddingVertical": 0,
                "position": "absolute",
                "top": 0,
              },
              {
                "transform": [
                  {
                    "translateY": undefined,
                  },
                ],
              },
            ]
          }
        >
          <Text
            disableAnimation={
              {
                "value": 0,
              }
            }
            focusAnimation={
              {
                "value": 0,
              }
            }
            scale={
              {
                "value": 1,
              }
            }
            shift={
              {
                "value": 1,
              }
            }
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                  "includeFontPadding": false,
                },
                {
                  "color": undefined,
                  "fontSize": undefined,
                },
              ]
            }
          >
            Sub-category
          </Text>
        </View>
        <TextInput
          accessibilityState={
            {
              "disabled": false,
            }
          }
          accessible={true}
          animated={true}
          autoCapitalize="words"
          autoFocus={true}
          disableAnimation={
            {
              "value": 0,
            }
          }
          focusAnimation={
            {
              "value": 0,
            }
          }
          multiline={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onSubmitEditing={[Function]}
          returnKeyType="done"
          scale={
            {
              "value": 1,
            }
          }
          secureTextEntry={false}
          selectionColor="#FFFFFF"
          style={
            [
              {
                "color": "#1b2f3b",
                "flexGrow": 1,
                "flexShrink": 1,
                "fontFamily": "Quicksand-Regular",
                "margin": 0,
                "paddingHorizontal": 11,
                "paddingVertical": 0,
              },
              {
                "color": undefined,
                "fontSize": 22,
              },
            ]
          }
          testID="undefined.textInput"
          textAlignVertical="top"
          value="Paycheck"
        />
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="undefined.clearIcon"
      >
        <View
          scale={
            {
              "value": 22,
            }
          }
          style={
            [
              {
                "alignItems": "stretch",
                "aspectRatio": 1,
              },
              {
                "opacity": 22,
                "width": 22,
              },
            ]
          }
        >
          <Text
            adjustsFontSizeToFit={true}
            allowFontScaling={false}
            style={
              [
                {
                  "color": undefined,
                  "fontSize": 12,
                },
                {
                  "color": "#FFFFFF",
                  "fontSize": 22,
                },
                {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 22,
          "paddingHorizontal": 11,
        }
      }
    >
      <Text
        adjustsFontSizeToFit={true}
        minimumFontScale={0.65}
        numberOfLines={1}
        style={
          [
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Regular",
              "fontSize": 22,
              "includeFontPadding": false,
            },
            [
              {
                "color": "#A4C7DF",
                "fontSize": 18,
              },
            ],
            null,
          ]
        }
      />
    </View>
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
            "overflow": "hidden",
          }
        }
      >
        <RCTScrollView
          applyWindowCorrection={[Function]}
          canChangeSize={true}
          contentContainerStyle={
            {
              "backgroundColor": undefined,
              "minHeight": 1,
              "minWidth": 1,
              "paddingLeft": 0,
              "paddingRight": 0,
            }
          }
          contentHeight={0}
          contentWidth={0}
          data={
            [
              {
                "display": "Income: Paycheck",
                "new": true,
                "raw": "Income:Paycheck",
                "selected": true,
              },
              {
                "display": "Exchange: Paycheck",
                "new": true,
                "raw": "Exchange:Paycheck",
                "selected": false,
              },
              {
                "display": "Expense: Paycheck",
                "new": true,
                "raw": "Expense:Paycheck",
                "selected": false,
              },
              {
                "display": "Transfer: Paycheck",
                "new": true,
                "raw": "Transfer:Paycheck",
                "selected": false,
              },
            ]
          }
          dataProvider={
            DataProvider {
              "_data": [
                {
                  "display": "Income: Paycheck",
                  "new": true,
                  "raw": "Income:Paycheck",
                  "selected": true,
                },
                {
                  "display": "Exchange: Paycheck",
                  "new": true,
                  "raw": "Exchange:Paycheck",
                  "selected": false,
                },
                {
                  "display": "Expense: Paycheck",
                  "new": true,
                  "raw": "Expense:Paycheck",
                  "selected": false,
                },
                {
                  "display": "Transfer: Paycheck",
                  "new": true,
                  "raw": "Transfer:Paycheck",
                  "selected": false,
                },
              ],
              "_firstIndexToProcess": 0,
              "_hasStableIds": true,
              "_requiresDataChangeHandling": false,
              "_size": 4,
              "getStableId": [Function],
              "rowHasChanged": [Function],
            }
          }
          disableRecycling={false}
          estimatedItemSize={67}
          extendedState={{}}
          externalScrollView={[Function]}
          finalRenderAheadOffset={250}
          forceNonDeterministicRendering={true}
          horizontal={false}
          initialOffset={0}
          initialRenderIndex={0}
          isHorizontal={false}
          keyExtractor={[Function]}
          keyboardShouldPersistTaps="handled"
          layoutProvider={
            GridLayoutProviderWithProps {
              "_acceptableRelayoutDelta": 1,
              "_getHeightOrWidth": [Function],
              "_getLayoutTypeForIndex": [Function],
              "_getSpan": [Function],
              "_hasExpired": false,
              "_maxSpan": 1,
              "_setLayoutForType": [Function],
              "_tempDim": {
                "height": 0,
                "width": 0,
              },
              "averageWindow": AverageWindow {
                "currentAverage": 67,
                "currentCount": 1,
                "inputValues": [
                  67,
                ],
                "nextIndex": 1,
              },
              "defaultEstimatedItemSize": 100,
              "layoutObject": {
                "size": undefined,
                "span": undefined,
              },
              "props": {
                "contentContainerStyle": {
                  "paddingBottom": 67,
                },
                "data": [
                  {
                    "display": "Income: Paycheck",
                    "new": true,
                    "raw": "Income:Paycheck",
                    "selected": true,
                  },
                  {
                    "display": "Exchange: Paycheck",
                    "new": true,
                    "raw": "Exchange:Paycheck",
                    "selected": false,
                  },
                  {
                    "display": "Expense: Paycheck",
                    "new": true,
                    "raw": "Expense:Paycheck",
                    "selected": false,
                  },
                  {
                    "display": "Transfer: Paycheck",
                    "new": true,
                    "raw": "Transfer:Paycheck",
                    "selected": false,
                  },
                ],
                "estimatedItemSize": 67,
                "keyExtractor": [Function],
                "keyboardShouldPersistTaps": "handled",
                "numColumns": 1,
                "renderItem": [Function],
              },
              "renderWindowInsets": {
                "height": 0,
                "width": 0,
              },
              "shouldRefreshWithAnchoring": true,
            }
          }
          maxRenderAhead={750}
          numColumns={1}
          onEndReached={[Function]}
          onEndReachedThreshold={0}
          onEndReachedThresholdRelative={0}
          onItemLayout={[Function]}
          onLayout={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onSizeChanged={[Function]}
          onVisibleIndicesChanged={[Function]}
          removeClippedSubviews={false}
          renderAheadOffset={0}
          renderAheadStep={250}
          renderContentContainer={[Function]}
          renderItem={[Function]}
          renderItemContainer={[Function]}
          rowRenderer={[Function]}
          scrollEventThrottle={16}
          scrollThrottle={16}
          scrollViewProps={
            {
              "contentContainerStyle": {
                "backgroundColor": undefined,
                "minHeight": 1,
                "minWidth": 1,
                "paddingLeft": 0,
                "paddingRight": 0,
              },
              "onLayout": [Function],
              "onScrollBeginDrag": [Function],
              "refreshControl": undefined,
              "style": {
                "minHeight": 1,
                "minWidth": 1,
              },
            }
          }
          style={
            {
              "minHeight": 1,
              "minWidth": 1,
            }
          }
          suppressBoundedSizeException={true}
          windowCorrectionConfig={
            {
              "applyToInitialOffset": true,
              "applyToItemScroll": true,
              "value": {
                "endCorrection": 0,
                "startCorrection": 0,
                "windowShift": -0,
              },
            }
          }
        >
          <View>
            <View
              style={
                {
                  "flexDirection": "column",
                }
              }
            >
              <AutoLayoutView
                enableInstrumentation={false}
                horizontal={false}
                onBlankAreaEvent={[Function]}
                onLayout={[Function]}
                renderAheadOffset={0}
                scrollOffset={0}
                style={
                  {
                    "height": 0,
                    "width": 0,
                  }
                }
                windowSize={0}
              />
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "zIndex": 1,
          }
        }
      >
        <BVLinearGradient
          colors={
            [
              1187109,
              856825125,
              3205635365,
              4279377189,
            ]
          }
          endPoint={
            {
              "x": 0,
              "y": 1,
            }
          }
          locations={
            [
              0,
              0.2,
              0.75,
              1,
            ]
          }
          pointerEvents="none"
          startPoint={
            {
              "x": 0,
              "y": 0,
            }
          }
          style={
            {
              "bottom": 0,
              "height": 67,
              "position": "absolute",
              "width": "100%",
            }
          }
        />
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "marginBottom": -22,
          "opacity": 1,
          "padding": 22,
        }
      }
    >
      <Text
        accessibilityHint="Close modal"
        allowFontScaling={false}
        style={
          [
            {
              "color": "#00f1a2",
              "fontSize": 28,
            },
            undefined,
            {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;

exports[`CategoryModal should render with an empty subcategory 1`] = `
[
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BlurView
      blurAmount={10}
      blurType="light"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
  </View>,
  <View
    collapsable={false}
    style={
      {
        "alignSelf": "flex-end",
        "backgroundColor": "#121d25",
        "borderColor": "rgba(255, 255, 255, 0)",
        "borderTopLeftRadius": 22,
        "borderTopRightRadius": 22,
        "borderWidth": 0,
        "flexDirection": undefined,
        "flexShrink": 1,
        "justifyContent": undefined,
        "marginBottom": -64,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 0,
        "maxHeight": undefined,
        "overflow": "visible",
        "paddingBottom": 86,
        "paddingLeft": 22,
        "paddingRight": 22,
        "paddingTop": 22,
        "shadowOffset": {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 1,
        "shadowRadius": 10,
        "transform": [
          {
            "translateY": 1334,
          },
        ],
        "width": 512,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "margin": 11,
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Medium",
              "fontSize": 27,
              "marginVertical": 11,
            },
            {
              "textAlign": "center",
            },
            {
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
          ]
        }
      >
        Choose a Category
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 22,
          "marginHorizontal": 22,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0)",
            "borderColor": "rgba(255, 255, 255, 0)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "opacity": 1,
            "padding": 7,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.25}
          numberOfLines={1}
          style={
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Bold",
              "fontSize": 14,
              "marginHorizontal": 7,
            }
          }
        >
          Income
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0)",
            "borderColor": "rgba(255, 255, 255, 0)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "opacity": 1,
            "padding": 7,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.25}
          numberOfLines={1}
          style={
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Bold",
              "fontSize": 14,
              "marginHorizontal": 7,
            }
          }
        >
          Expense
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0)",
            "borderColor": "rgba(255, 255, 255, 0)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "opacity": 1,
            "padding": 7,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.25}
          numberOfLines={1}
          style={
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Bold",
              "fontSize": 14,
              "marginHorizontal": 7,
            }
          }
        >
          Transfer
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "hsla(0, 0%, 100%, 0.20)",
            "borderColor": "hsla(0, 0%, 100%, 0.20)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "opacity": 1,
            "padding": 7,
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          minimumFontScale={0.25}
          numberOfLines={1}
          style={
            {
              "color": "#06090c",
              "fontFamily": "Quicksand-Bold",
              "fontSize": 14,
              "marginHorizontal": 7,
            }
          }
        >
          Exchange
        </Text>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={false}
      disableAnimation={
        {
          "value": 0,
        }
      }
      focusAnimation={
        {
          "value": 0,
        }
      }
      focusable={true}
      multiline={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      scale={
        {
          "value": 1,
        }
      }
      style={
        [
          {
            "alignItems": "center",
            "borderRadius": 11,
            "borderWidth": 1,
            "flex": undefined,
            "flexDirection": "row",
            "paddingHorizontal": 22,
          },
          {
            "backgroundColor": undefined,
            "borderColor": undefined,
            "marginHorizontal": undefined,
            "opacity": undefined,
            "paddingVertical": 17.6,
          },
        ]
      }
    >
      <View
        scale={
          {
            "value": 0,
          }
        }
        style={
          [
            {
              "alignItems": "stretch",
              "aspectRatio": 1,
            },
            {
              "opacity": 0,
              "width": 0,
            },
          ]
        }
      />
      <View
        focusValue={
          {
            "value": 0,
          }
        }
        hasPlaceholder={true}
        style={
          [
            {
              "alignItems": "flex-start",
              "alignSelf": "flex-start",
              "flex": 1,
              "flexDirection": "row",
            },
            {
              "marginBottom": NaN,
              "marginTop": undefined,
            },
          ]
        }
      >
        <View
          shift={
            {
              "value": 0,
            }
          }
          style={
            [
              {
                "alignItems": "center",
                "justifyContent": "center",
                "margin": 0,
                "paddingHorizontal": 11,
                "paddingVertical": 0,
                "position": "absolute",
                "top": 0,
              },
              {
                "transform": [
                  {
                    "translateY": undefined,
                  },
                ],
              },
            ]
          }
        >
          <Text
            disableAnimation={
              {
                "value": 0,
              }
            }
            focusAnimation={
              {
                "value": 0,
              }
            }
            scale={
              {
                "value": 1,
              }
            }
            shift={
              {
                "value": 0,
              }
            }
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Quicksand-Regular",
                  "fontSize": 22,
                  "includeFontPadding": false,
                },
                {
                  "color": undefined,
                  "fontSize": undefined,
                },
              ]
            }
          >
            Sub-category
          </Text>
        </View>
        <TextInput
          accessibilityState={
            {
              "disabled": false,
            }
          }
          accessible={true}
          animated={true}
          autoCapitalize="words"
          autoFocus={true}
          disableAnimation={
            {
              "value": 0,
            }
          }
          focusAnimation={
            {
              "value": 0,
            }
          }
          multiline={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onSubmitEditing={[Function]}
          returnKeyType="done"
          scale={
            {
              "value": 1,
            }
          }
          secureTextEntry={false}
          selectionColor="#FFFFFF"
          style={
            [
              {
                "color": "#1b2f3b",
                "flexGrow": 1,
                "flexShrink": 1,
                "fontFamily": "Quicksand-Regular",
                "margin": 0,
                "paddingHorizontal": 11,
                "paddingVertical": 0,
              },
              {
                "color": undefined,
                "fontSize": 22,
              },
            ]
          }
          testID="undefined.textInput"
          textAlignVertical="top"
          value=""
        />
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="undefined.clearIcon"
      >
        <View
          scale={
            {
              "value": 0,
            }
          }
          style={
            [
              {
                "alignItems": "stretch",
                "aspectRatio": 1,
              },
              {
                "opacity": 0,
                "width": 0,
              },
            ]
          }
        >
          <Text
            adjustsFontSizeToFit={true}
            allowFontScaling={false}
            style={
              [
                {
                  "color": undefined,
                  "fontSize": 12,
                },
                {
                  "color": "#FFFFFF",
                  "fontSize": 0,
                },
                {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 22,
          "paddingHorizontal": 11,
        }
      }
    >
      <Text
        adjustsFontSizeToFit={true}
        minimumFontScale={0.65}
        numberOfLines={1}
        style={
          [
            {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Regular",
              "fontSize": 22,
              "includeFontPadding": false,
            },
            [
              {
                "color": "#A4C7DF",
                "fontSize": 18,
              },
            ],
            null,
          ]
        }
      />
    </View>
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
            "overflow": "hidden",
          }
        }
      >
        <RCTScrollView
          applyWindowCorrection={[Function]}
          canChangeSize={true}
          contentContainerStyle={
            {
              "backgroundColor": undefined,
              "minHeight": 1,
              "minWidth": 1,
              "paddingLeft": 0,
              "paddingRight": 0,
            }
          }
          contentHeight={0}
          contentWidth={0}
          data={
            [
              {
                "display": "Exchange: Buy Bitcoin",
                "new": false,
                "raw": "Exchange:Buy Bitcoin",
                "selected": true,
              },
              {
                "display": "Exchange: Sell Bitcoin",
                "new": false,
                "raw": "Exchange:Sell Bitcoin",
                "selected": true,
              },
              {
                "display": "Expense: Air Travel",
                "new": false,
                "raw": "Expense:Air Travel",
                "selected": false,
              },
              {
                "display": "Expense: Alcohol & Bars",
                "new": false,
                "raw": "Expense:Alcohol & Bars",
                "selected": false,
              },
            ]
          }
          dataProvider={
            DataProvider {
              "_data": [
                {
                  "display": "Exchange: Buy Bitcoin",
                  "new": false,
                  "raw": "Exchange:Buy Bitcoin",
                  "selected": true,
                },
                {
                  "display": "Exchange: Sell Bitcoin",
                  "new": false,
                  "raw": "Exchange:Sell Bitcoin",
                  "selected": true,
                },
                {
                  "display": "Expense: Air Travel",
                  "new": false,
                  "raw": "Expense:Air Travel",
                  "selected": false,
                },
                {
                  "display": "Expense: Alcohol & Bars",
                  "new": false,
                  "raw": "Expense:Alcohol & Bars",
                  "selected": false,
                },
              ],
              "_firstIndexToProcess": 0,
              "_hasStableIds": true,
              "_requiresDataChangeHandling": false,
              "_size": 4,
              "getStableId": [Function],
              "rowHasChanged": [Function],
            }
          }
          disableRecycling={false}
          estimatedItemSize={67}
          extendedState={{}}
          externalScrollView={[Function]}
          finalRenderAheadOffset={250}
          forceNonDeterministicRendering={true}
          horizontal={false}
          initialOffset={0}
          initialRenderIndex={0}
          isHorizontal={false}
          keyExtractor={[Function]}
          keyboardShouldPersistTaps="handled"
          layoutProvider={
            GridLayoutProviderWithProps {
              "_acceptableRelayoutDelta": 1,
              "_getHeightOrWidth": [Function],
              "_getLayoutTypeForIndex": [Function],
              "_getSpan": [Function],
              "_hasExpired": false,
              "_maxSpan": 1,
              "_setLayoutForType": [Function],
              "_tempDim": {
                "height": 0,
                "width": 0,
              },
              "averageWindow": AverageWindow {
                "currentAverage": 67,
                "currentCount": 1,
                "inputValues": [
                  67,
                ],
                "nextIndex": 1,
              },
              "defaultEstimatedItemSize": 100,
              "layoutObject": {
                "size": undefined,
                "span": undefined,
              },
              "props": {
                "contentContainerStyle": {
                  "paddingBottom": 67,
                },
                "data": [
                  {
                    "display": "Exchange: Buy Bitcoin",
                    "new": false,
                    "raw": "Exchange:Buy Bitcoin",
                    "selected": true,
                  },
                  {
                    "display": "Exchange: Sell Bitcoin",
                    "new": false,
                    "raw": "Exchange:Sell Bitcoin",
                    "selected": true,
                  },
                  {
                    "display": "Expense: Air Travel",
                    "new": false,
                    "raw": "Expense:Air Travel",
                    "selected": false,
                  },
                  {
                    "display": "Expense: Alcohol & Bars",
                    "new": false,
                    "raw": "Expense:Alcohol & Bars",
                    "selected": false,
                  },
                ],
                "estimatedItemSize": 67,
                "keyExtractor": [Function],
                "keyboardShouldPersistTaps": "handled",
                "numColumns": 1,
                "renderItem": [Function],
              },
              "renderWindowInsets": {
                "height": 0,
                "width": 0,
              },
              "shouldRefreshWithAnchoring": true,
            }
          }
          maxRenderAhead={750}
          numColumns={1}
          onEndReached={[Function]}
          onEndReachedThreshold={0}
          onEndReachedThresholdRelative={0}
          onItemLayout={[Function]}
          onLayout={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onSizeChanged={[Function]}
          onVisibleIndicesChanged={[Function]}
          removeClippedSubviews={false}
          renderAheadOffset={0}
          renderAheadStep={250}
          renderContentContainer={[Function]}
          renderItem={[Function]}
          renderItemContainer={[Function]}
          rowRenderer={[Function]}
          scrollEventThrottle={16}
          scrollThrottle={16}
          scrollViewProps={
            {
              "contentContainerStyle": {
                "backgroundColor": undefined,
                "minHeight": 1,
                "minWidth": 1,
                "paddingLeft": 0,
                "paddingRight": 0,
              },
              "onLayout": [Function],
              "onScrollBeginDrag": [Function],
              "refreshControl": undefined,
              "style": {
                "minHeight": 1,
                "minWidth": 1,
              },
            }
          }
          style={
            {
              "minHeight": 1,
              "minWidth": 1,
            }
          }
          suppressBoundedSizeException={true}
          windowCorrectionConfig={
            {
              "applyToInitialOffset": true,
              "applyToItemScroll": true,
              "value": {
                "endCorrection": 0,
                "startCorrection": 0,
                "windowShift": -0,
              },
            }
          }
        >
          <View>
            <View
              style={
                {
                  "flexDirection": "column",
                }
              }
            >
              <AutoLayoutView
                enableInstrumentation={false}
                horizontal={false}
                onBlankAreaEvent={[Function]}
                onLayout={[Function]}
                renderAheadOffset={0}
                scrollOffset={0}
                style={
                  {
                    "height": 0,
                    "width": 0,
                  }
                }
                windowSize={0}
              />
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "zIndex": 1,
          }
        }
      >
        <BVLinearGradient
          colors={
            [
              1187109,
              856825125,
              3205635365,
              4279377189,
            ]
          }
          endPoint={
            {
              "x": 0,
              "y": 1,
            }
          }
          locations={
            [
              0,
              0.2,
              0.75,
              1,
            ]
          }
          pointerEvents="none"
          startPoint={
            {
              "x": 0,
              "y": 0,
            }
          }
          style={
            {
              "bottom": 0,
              "height": 67,
              "position": "absolute",
              "width": "100%",
            }
          }
        />
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "marginBottom": -22,
          "opacity": 1,
          "padding": 22,
        }
      }
    >
      <Text
        accessibilityHint="Close modal"
        allowFontScaling={false}
        style={
          [
            {
              "color": "#00f1a2",
              "fontSize": 28,
            },
            undefined,
            {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;
