// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WalletListModal should render with loading props 1`] = `
Array [
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <BlurView
      blurAmount={10}
      blurType="light"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
  </View>,
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": "flex-end",
        "backgroundColor": "#121d25",
        "borderColor": "rgba(255, 255, 255, 0)",
        "borderTopLeftRadius": 22,
        "borderTopRightRadius": 22,
        "borderWidth": 0,
        "flexDirection": undefined,
        "flexShrink": 1,
        "justifyContent": undefined,
        "marginBottom": -64,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 0,
        "maxHeight": undefined,
        "overflow": "visible",
        "paddingBottom": 86,
        "paddingLeft": 22,
        "paddingRight": 22,
        "paddingTop": 22,
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 1,
        "shadowRadius": 10,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
        "width": 512,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "margin": 11,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Medium",
              "fontSize": 27,
              "marginVertical": 11,
            },
            Object {
              "textAlign": "center",
            },
            Object {
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
          ]
        }
      >
        Wallet List
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(255, 255, 255, 0)",
            "borderRadius": 11,
            "justifyContent": "center",
            "minHeight": 67,
            "paddingHorizontal": 22,
          },
          Object {
            "flexGrow": 0,
            "marginBottom": 28,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 11,
            "paddingLeft": 65,
            "paddingRight": 65,
            "paddingVertical": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderTopWidth": 1,
              "bottom": 0,
              "left": 22,
              "position": "absolute",
              "right": 22,
            },
            Object {
              "borderColor": undefined,
              "right": 11,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "borderBottomLeftRadius": 11,
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderRightWidth": 0,
              "borderTopLeftRadius": 11,
              "borderTopWidth": 1,
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": 22,
            },
            Object {
              "borderColor": undefined,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "borderBottomRightRadius": 11,
              "borderBottomWidth": 1,
              "borderLeftWidth": 0,
              "borderRightWidth": 1,
              "borderTopRightRadius": 11,
              "borderTopWidth": 1,
              "bottom": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 22,
            },
            Object {
              "borderColor": undefined,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "borderTopWidth": 1,
              "left": 22,
              "position": "absolute",
              "right": 22,
              "top": 0,
            },
            Object {
              "borderColor": undefined,
              "left": 22,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "height": 67,
              "justifyContent": "center",
              "left": 0,
              "paddingHorizontal": 22,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "paddingLeft": 65,
              "paddingRight": 65,
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          onLayout={[Function]}
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "fontFamily": "Quicksand-Regular",
                "fontSize": 22,
                "padding": 0,
              },
              Object {
                "color": undefined,
                "transform": Array [
                  Object {
                    "translateX": -0,
                  },
                  Object {
                    "translateY": -0,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
            ]
          }
        >
          Search Wallets
        </Text>
      </View>
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "bottom": -28,
              "color": "#E85466",
              "fontFamily": "Quicksand-Regular",
              "fontSize": 17,
              "left": 28,
              "position": "absolute",
            },
            Object {
              "opacity": 0,
            },
          ]
        }
      />
      <Text
        numberOfLines={1}
        onLayout={[Function]}
        style={
          Array [
            Object {
              "bottom": -10,
              "fontFamily": "Quicksand-Regular",
              "fontSize": 17,
              "position": "absolute",
              "right": 28,
            },
            Object {
              "color": undefined,
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": 6,
                },
                Object {
                  "scale": 0,
                },
              ],
            },
          ]
        }
      >
        
      </Text>
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            Object {
              "color": "rgba(255, 255, 255, .75)",
              "fontSize": 22,
              "left": 0,
              "padding": 22,
              "position": "absolute",
              "top": 0,
            },
            Object {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        î™°
      </Text>
      <TextInput
        autoFocus={false}
        editable={true}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        returnKeyType="search"
        secureTextEntry={false}
        selectionColor="#FFFFFF"
        style={
          Array [
            Object {
              "alignSelf": "stretch",
              "color": "#FFFFFF",
              "fontFamily": "Quicksand-Regular",
              "fontSize": 22,
              "padding": 0,
            },
            Object {
              "flexGrow": 0,
            },
          ]
        }
        textAlignVertical="top"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "overflow": "hidden",
        }
      }
    >
      <RCTScrollView
        applyWindowCorrection={[Function]}
        canChangeSize={true}
        contentContainerStyle={
          Object {
            "backgroundColor": undefined,
            "minHeight": 1,
            "minWidth": 1,
            "paddingLeft": 0,
            "paddingRight": 0,
          }
        }
        contentHeight={0}
        contentWidth={0}
        data={Array []}
        dataProvider={
          DataProvider {
            "_data": Array [],
            "_firstIndexToProcess": 0,
            "_hasStableIds": false,
            "_requiresDataChangeHandling": false,
            "_size": 0,
            "getStableId": [Function],
            "rowHasChanged": [Function],
          }
        }
        disableRecycling={false}
        estimatedItemSize={96}
        extendedState={Object {}}
        externalScrollView={[Function]}
        finalRenderAheadOffset={250}
        forceNonDeterministicRendering={true}
        horizontal={false}
        initialOffset={0}
        initialRenderIndex={0}
        isHorizontal={false}
        keyboardShouldPersistTaps="handled"
        layoutProvider={
          GridLayoutProviderWithProps {
            "_acceptableRelayoutDelta": 1,
            "_getHeightOrWidth": [Function],
            "_getLayoutTypeForIndex": [Function],
            "_getSpan": [Function],
            "_hasExpired": false,
            "_maxSpan": 1,
            "_setLayoutForType": [Function],
            "_tempDim": Object {
              "height": 0,
              "width": 0,
            },
            "averageWindow": AverageWindow {
              "currentAverage": 96,
              "currentCount": 1,
              "inputValues": Array [
                96,
              ],
              "nextIndex": 1,
            },
            "defaultEstimatedItemSize": 100,
            "layoutObject": Object {
              "size": undefined,
              "span": undefined,
            },
            "props": Object {
              "data": Array [],
              "estimatedItemSize": 96,
              "keyboardShouldPersistTaps": "handled",
              "numColumns": 1,
              "renderItem": [Function],
              "style": Object {
                "marginBottom": 0,
                "marginLeft": -22,
                "marginRight": -22,
                "marginTop": 0,
              },
            },
            "renderWindowInsets": Object {
              "height": 0,
              "width": 0,
            },
            "shouldRefreshWithAnchoring": true,
          }
        }
        maxRenderAhead={750}
        numColumns={1}
        onEndReached={[Function]}
        onEndReachedThreshold={0}
        onEndReachedThresholdRelative={0}
        onItemLayout={[Function]}
        onLayout={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onSizeChanged={[Function]}
        onVisibleIndicesChanged={[Function]}
        removeClippedSubviews={false}
        renderAheadOffset={0}
        renderAheadStep={250}
        renderContentContainer={[Function]}
        renderItem={[Function]}
        renderItemContainer={[Function]}
        rowRenderer={[Function]}
        scrollEventThrottle={16}
        scrollThrottle={16}
        scrollViewProps={
          Object {
            "contentContainerStyle": Object {
              "backgroundColor": undefined,
              "minHeight": 1,
              "minWidth": 1,
              "paddingLeft": 0,
              "paddingRight": 0,
            },
            "onLayout": [Function],
            "onScrollBeginDrag": [Function],
            "refreshControl": undefined,
            "style": Object {
              "minHeight": 1,
              "minWidth": 1,
            },
          }
        }
        style={
          Object {
            "minHeight": 1,
            "minWidth": 1,
          }
        }
        suppressBoundedSizeException={true}
        windowCorrectionConfig={
          Object {
            "applyToInitialOffset": true,
            "applyToItemScroll": true,
            "value": Object {
              "endCorrection": 0,
              "startCorrection": 0,
              "windowShift": -0,
            },
          }
        }
      >
        <View>
          <View
            style={
              Object {
                "flexDirection": "column",
              }
            }
          >
            <View
              style={
                Object {
                  "paddingLeft": 0,
                  "paddingTop": 0,
                }
              }
            />
            <View
              style={
                Array [
                  undefined,
                  undefined,
                ]
              }
            />
            <AutoLayoutView
              enableInstrumentation={false}
              horizontal={false}
              onBlankAreaEvent={[Function]}
              onLayout={[Function]}
              renderAheadOffset={0}
              scrollOffset={0}
              style={
                Object {
                  "height": 0,
                  "width": 0,
                }
              }
              windowSize={0}
            />
            <CellContainer
              index={-1}
              style={
                Array [
                  undefined,
                  undefined,
                ]
              }
            />
            <View
              style={
                Object {
                  "paddingBottom": 0,
                  "paddingRight": 0,
                }
              }
            />
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View
      style={
        Object {
          "marginBottom": -22,
        }
      }
    >
      <View
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityHint="Close Modal"
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "opacity": 1,
              "padding": 22,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#00f1a2",
                  "fontSize": 28,
                },
                undefined,
                Object {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            î˜³
          </Text>
        </View>
      </View>
      <BVLinearGradient
        colors={
          Array [
            1187109,
            856825125,
            3205635365,
            4279377189,
          ]
        }
        endPoint={
          Object {
            "x": 0,
            "y": 1,
          }
        }
        locations={
          Array [
            0,
            0.2,
            0.75,
            1,
          ]
        }
        pointerEvents="none"
        startPoint={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        style={
          Object {
            "bottom": 0,
            "height": 67,
            "position": "absolute",
            "width": "100%",
          }
        }
      />
    </View>
  </View>,
]
`;
